{"ast":null,"code":"var _jsxFileName = \"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserHome.jsx\";\nimport './UserHome.css';\nimport reactDom from 'react-dom'; // import * as React from 'react';\n\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Logout from './Logout';\nimport ConversationsByRows from './ConversationsByRows';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props); // Etat du composant\n\n    this.getConversations = () => {\n      fetch('http://localhost:5000/conversation-list').then(response => {\n        return response.json();\n      }).then(convers_list => {\n        console.log('UserHome/getConversations/convers_list', convers_list); // Sauvegarde de l'état du composant avec le résultat de la réponse parsée de la DB\n\n        this.setState({\n          conversations: convers_list.conversations\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.state = {\n      // liste des conversations de l'utilisateur connecté\n      conversations: []\n    };\n  }\n\n  componentDidMount() {\n    this.getConversations();\n  }\n\n  // Rendu React du composant\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Conversations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), this.state.conversations.map(conv => {\n          return /*#__PURE__*/_jsxDEV(ConversationsByRows, {\n            id: conv.id,\n            name: conv.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserHome;","map":{"version":3,"sources":["/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserHome.jsx"],"names":["reactDom","React","useState","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","SearchIcon","CloseIcon","Logout","ConversationsByRows","Header","UserHome","Component","constructor","props","getConversations","fetch","then","response","json","convers_list","console","log","setState","conversations","error","state","componentDidMount","render","map","conv","id","name"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAOA,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAOA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAGA,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAanBC,gBAbmB,GAaA,MAAM;AACvBC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,eACEA,QAAQ,CAACC,IAAT,EADF;AAEA,OAJF,EAKCF,IALD,CAKMG,YAAY,IAAI;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,YAAtD,EADoB,CAEpB;;AACA,aAAKG,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAGJ,YAAY,CAACI;AADjB,SAAd;AAGK,OAXP,EAWUC,KAAD,IAAW;AACZ,aAAKF,QAAL,CAAc;AACZE,UAAAA;AADY,SAAd;AAGD,OAfP;AAiBD,KA/BkB;;AAGjB,SAAKC,KAAL,GAAa;AACX;AACAF,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,gBAAL;AACD;;AAuBD;AACAa,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEK,KAAKF,KAAL,CAAWF,aAAX,CAAyBK,GAAzB,CAA8BC,IAAD,IAAU;AACtC,8BACE,QAAC,mBAAD;AAAqB,YAAA,EAAE,EAAEA,IAAI,CAACC,EAA9B;AAAkC,YAAA,IAAI,EAAED,IAAI,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADF;AAGC,SAJF,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADJ;AAgBD;;AAtDoC;;AAyDvC,eAAerB,QAAf","sourcesContent":["import './UserHome.css';\nimport reactDom from 'react-dom';\n// import * as React from 'react';\nimport React, { useState } from 'react'\nimport { \n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Logout from './Logout';\nimport ConversationsByRows from './ConversationsByRows';\nimport Header from './Header'\n\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props);\n    // Etat du composant\n    this.state = {\n      // liste des conversations de l'utilisateur connecté\n      conversations: [],\n    }\n  }\n\n  componentDidMount() {\n    this.getConversations()\n  }\n\n  getConversations = () => {\n    fetch('http://localhost:5000/conversation-list')\n    .then(response => {\n      return(\n        response.json()\n    )})\n    .then(convers_list => {\n      console.log('UserHome/getConversations/convers_list', convers_list)\n      // Sauvegarde de l'état du composant avec le résultat de la réponse parsée de la DB\n      this.setState({\n        conversations : convers_list.conversations\n      });\n          }, (error) => {\n            this.setState({\n              error\n            });\n          }\n      )\n  };\n\n\n  // Rendu React du composant\n  render() {\n\n    return (\n        <>\n        <Header />\n        <section>\n          <div>Conversations:</div>\n            {this.state.conversations.map((conv) => {\n              return (\n                <ConversationsByRows id={conv.id} name={conv.name} />\n                )\n              })\n            }\n            \n        </section>\n        </>\n      );\n    \n  }\n}\n\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}