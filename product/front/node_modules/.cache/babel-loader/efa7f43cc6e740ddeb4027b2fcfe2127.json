{"ast":null,"code":"/*!\n * Socket.IO v4.3.2\n * (c) 2014-2021 Guillermo Rauch\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.io = factory());\n})(this, function () {\n  'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (!it) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n\n        var F = function () {};\n\n        return {\n          s: F,\n          n: function () {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function (e) {\n            throw e;\n          },\n          f: F\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var normalCompletion = true,\n        didErr = false,\n        err;\n    return {\n      s: function () {\n        it = it.call(o);\n      },\n      n: function () {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function (e) {\n        didErr = true;\n        err = e;\n      },\n      f: function () {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  /**\n   * Parses an URI\n   *\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\n   * @api private\n   */\n\n\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\n  var parseuri = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n      str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n      uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n      uri.source = src;\n      uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n      uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n      uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n  };\n\n  function pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n      names.splice(0, 1);\n    }\n\n    if (path.substr(path.length - 1, 1) == '/') {\n      names.splice(names.length - 1, 1);\n    }\n\n    return names;\n  }\n\n  function queryKey(uri, query) {\n    var data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n      if ($1) {\n        data[$1] = $2;\n      }\n    });\n    return data;\n  }\n  /**\n   * URL parser.\n   *\n   * @param uri - url\n   * @param path - the request path of the connection\n   * @param loc - An object meant to mimic window.location.\n   *        Defaults to window.location.\n   * @public\n   */\n\n\n  function url(uri) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var loc = arguments.length > 2 ? arguments[2] : undefined;\n    var obj = uri; // default to window.location\n\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host; // relative path support\n\n    if (typeof uri === \"string\") {\n      if (\"/\" === uri.charAt(0)) {\n        if (\"/\" === uri.charAt(1)) {\n          uri = loc.protocol + uri;\n        } else {\n          uri = loc.host + uri;\n        }\n      }\n\n      if (!/^(https?|wss?):\\/\\//.test(uri)) {\n        if (\"undefined\" !== typeof loc) {\n          uri = loc.protocol + \"//\" + uri;\n        } else {\n          uri = \"https://\" + uri;\n        }\n      } // parse\n\n\n      obj = parseuri(uri);\n    } // make sure we treat `localhost:80` and `localhost` equally\n\n\n    if (!obj.port) {\n      if (/^(http|ws)$/.test(obj.protocol)) {\n        obj.port = \"80\";\n      } else if (/^(http|ws)s$/.test(obj.protocol)) {\n        obj.port = \"443\";\n      }\n    }\n\n    obj.path = obj.path || \"/\";\n    var ipv6 = obj.host.indexOf(\":\") !== -1;\n    var host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host; // define unique id\n\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path; // define href\n\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n  }\n\n  var hasCors = {\n    exports: {}\n  };\n  /**\n   * Module exports.\n   *\n   * Logic borrowed from Modernizr:\n   *\n   *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n   */\n\n  try {\n    hasCors.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n  } catch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n    hasCors.exports = false;\n  }\n\n  var hasCORS = hasCors.exports;\n\n  var globalThis = function () {\n    if (typeof self !== \"undefined\") {\n      return self;\n    } else if (typeof window !== \"undefined\") {\n      return window;\n    } else {\n      return Function(\"return this\")();\n    }\n  }(); // browser shim for xmlhttprequest module\n\n\n  function XMLHttpRequest$1(opts) {\n    var xdomain = opts.xdomain; // XMLHttpRequest can be disabled on IE\n\n    try {\n      if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n        return new XMLHttpRequest();\n      }\n    } catch (e) {}\n\n    if (!xdomain) {\n      try {\n        return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n      } catch (e) {}\n    }\n  }\n\n  function pick(obj) {\n    for (var _len = arguments.length, attr = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      attr[_key - 1] = arguments[_key];\n    }\n\n    return attr.reduce(function (acc, k) {\n      if (obj.hasOwnProperty(k)) {\n        acc[k] = obj[k];\n      }\n\n      return acc;\n    }, {});\n  } // Keep a reference to the real timeout functions so they can be used when overridden\n\n\n  var NATIVE_SET_TIMEOUT = setTimeout;\n  var NATIVE_CLEAR_TIMEOUT = clearTimeout;\n\n  function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n      obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n      obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    } else {\n      obj.setTimeoutFn = setTimeout.bind(globalThis);\n      obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n  }\n  /**\n   * Expose `Emitter`.\n   */\n\n\n  var Emitter_1 = Emitter;\n  /**\n   * Initialize a new `Emitter`.\n   *\n   * @api public\n   */\n\n  function Emitter(obj) {\n    if (obj) return mixin(obj);\n  }\n  /**\n   * Mixin the emitter properties.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   * @api private\n   */\n\n\n  function mixin(obj) {\n    for (var key in Emitter.prototype) {\n      obj[key] = Emitter.prototype[key];\n    }\n\n    return obj;\n  }\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n\n  Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n    return this;\n  };\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n\n  Emitter.prototype.once = function (event, fn) {\n    function on() {\n      this.off(event, on);\n      fn.apply(this, arguments);\n    }\n\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n  };\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n\n  Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {}; // all\n\n    if (0 == arguments.length) {\n      this._callbacks = {};\n      return this;\n    } // specific event\n\n\n    var callbacks = this._callbacks['$' + event];\n    if (!callbacks) return this; // remove all handlers\n\n    if (1 == arguments.length) {\n      delete this._callbacks['$' + event];\n      return this;\n    } // remove specific handler\n\n\n    var cb;\n\n    for (var i = 0; i < callbacks.length; i++) {\n      cb = callbacks[i];\n\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    } // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n\n\n    if (callbacks.length === 0) {\n      delete this._callbacks['$' + event];\n    }\n\n    return this;\n  };\n  /**\n   * Emit `event` with the given args.\n   *\n   * @param {String} event\n   * @param {Mixed} ...\n   * @return {Emitter}\n   */\n\n\n  Emitter.prototype.emit = function (event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1),\n        callbacks = this._callbacks['$' + event];\n\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    if (callbacks) {\n      callbacks = callbacks.slice(0);\n\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n\n    return this;\n  }; // alias used for reserved events (protected method)\n\n\n  Emitter.prototype.emitReserved = Emitter.prototype.emit;\n  /**\n   * Return array of callbacks for `event`.\n   *\n   * @param {String} event\n   * @return {Array}\n   * @api public\n   */\n\n  Emitter.prototype.listeners = function (event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n  };\n  /**\n   * Check if this emitter has `event` handlers.\n   *\n   * @param {String} event\n   * @return {Boolean}\n   * @api public\n   */\n\n\n  Emitter.prototype.hasListeners = function (event) {\n    return !!this.listeners(event).length;\n  };\n\n  var PACKET_TYPES = Object.create(null); // no Map = no polyfill\n\n  PACKET_TYPES[\"open\"] = \"0\";\n  PACKET_TYPES[\"close\"] = \"1\";\n  PACKET_TYPES[\"ping\"] = \"2\";\n  PACKET_TYPES[\"pong\"] = \"3\";\n  PACKET_TYPES[\"message\"] = \"4\";\n  PACKET_TYPES[\"upgrade\"] = \"5\";\n  PACKET_TYPES[\"noop\"] = \"6\";\n  var PACKET_TYPES_REVERSE = Object.create(null);\n  Object.keys(PACKET_TYPES).forEach(function (key) {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n  });\n  var ERROR_PACKET = {\n    type: \"error\",\n    data: \"parser error\"\n  };\n  var withNativeBlob$1 = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\n  var withNativeArrayBuffer$2 = typeof ArrayBuffer === \"function\"; // ArrayBuffer.isView method is not defined in IE10\n\n  var isView$1 = function isView(obj) {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n  };\n\n  var encodePacket = function encodePacket(_ref, supportsBinary, callback) {\n    var type = _ref.type,\n        data = _ref.data;\n\n    if (withNativeBlob$1 && data instanceof Blob) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(data, callback);\n      }\n    } else if (withNativeArrayBuffer$2 && (data instanceof ArrayBuffer || isView$1(data))) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(new Blob([data]), callback);\n      }\n    } // plain string\n\n\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n  };\n\n  var encodeBlobAsBase64 = function encodeBlobAsBase64(data, callback) {\n    var fileReader = new FileReader();\n\n    fileReader.onload = function () {\n      var content = fileReader.result.split(\",\")[1];\n      callback(\"b\" + content);\n    };\n\n    return fileReader.readAsDataURL(data);\n  };\n  /*\n   * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n   * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n   * Released under MIT License\n   */\n\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; // Use a lookup table to find the index.\n\n  var lookup$1 = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\n\n  for (var i$1 = 0; i$1 < chars.length; i$1++) {\n    lookup$1[chars.charCodeAt(i$1)] = i$1;\n  }\n\n  var decode$1 = function decode(base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === '=') {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup$1[base64.charCodeAt(i)];\n      encoded2 = lookup$1[base64.charCodeAt(i + 1)];\n      encoded3 = lookup$1[base64.charCodeAt(i + 2)];\n      encoded4 = lookup$1[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n\n  var withNativeArrayBuffer$1 = typeof ArrayBuffer === \"function\";\n\n  var decodePacket = function decodePacket(encodedPacket, binaryType) {\n    if (typeof encodedPacket !== \"string\") {\n      return {\n        type: \"message\",\n        data: mapBinary(encodedPacket, binaryType)\n      };\n    }\n\n    var type = encodedPacket.charAt(0);\n\n    if (type === \"b\") {\n      return {\n        type: \"message\",\n        data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n      };\n    }\n\n    var packetType = PACKET_TYPES_REVERSE[type];\n\n    if (!packetType) {\n      return ERROR_PACKET;\n    }\n\n    return encodedPacket.length > 1 ? {\n      type: PACKET_TYPES_REVERSE[type],\n      data: encodedPacket.substring(1)\n    } : {\n      type: PACKET_TYPES_REVERSE[type]\n    };\n  };\n\n  var decodeBase64Packet = function decodeBase64Packet(data, binaryType) {\n    if (withNativeArrayBuffer$1) {\n      var decoded = decode$1(data);\n      return mapBinary(decoded, binaryType);\n    } else {\n      return {\n        base64: true,\n        data: data\n      }; // fallback for old browsers\n    }\n  };\n\n  var mapBinary = function mapBinary(data, binaryType) {\n    switch (binaryType) {\n      case \"blob\":\n        return data instanceof ArrayBuffer ? new Blob([data]) : data;\n\n      case \"arraybuffer\":\n      default:\n        return data;\n      // assuming the data is already an ArrayBuffer\n    }\n  };\n\n  var SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\n  var encodePayload = function encodePayload(packets, callback) {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    var length = packets.length;\n    var encodedPackets = new Array(length);\n    var count = 0;\n    packets.forEach(function (packet, i) {\n      // force base64 encoding for binary packets\n      encodePacket(packet, false, function (encodedPacket) {\n        encodedPackets[i] = encodedPacket;\n\n        if (++count === length) {\n          callback(encodedPackets.join(SEPARATOR));\n        }\n      });\n    });\n  };\n\n  var decodePayload = function decodePayload(encodedPayload, binaryType) {\n    var encodedPackets = encodedPayload.split(SEPARATOR);\n    var packets = [];\n\n    for (var i = 0; i < encodedPackets.length; i++) {\n      var decodedPacket = decodePacket(encodedPackets[i], binaryType);\n      packets.push(decodedPacket);\n\n      if (decodedPacket.type === \"error\") {\n        break;\n      }\n    }\n\n    return packets;\n  };\n\n  var protocol$1 = 4;\n\n  var Transport = /*#__PURE__*/function (_Emitter) {\n    _inherits(Transport, _Emitter);\n\n    var _super = _createSuper(Transport);\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n\n\n    function Transport(opts) {\n      var _this;\n\n      _classCallCheck(this, Transport);\n\n      _this = _super.call(this);\n      _this.writable = false;\n      installTimerFunctions(_assertThisInitialized(_this), opts);\n      _this.opts = opts;\n      _this.query = opts.query;\n      _this.readyState = \"\";\n      _this.socket = opts.socket;\n      return _this;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n\n\n    _createClass(Transport, [{\n      key: \"onError\",\n      value: function onError(msg, desc) {\n        var err = new Error(msg); // @ts-ignore\n\n        err.type = \"TransportError\"; // @ts-ignore\n\n        err.description = desc;\n\n        _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"error\", err);\n\n        return this;\n      }\n      /**\n       * Opens the transport.\n       *\n       * @api public\n       */\n\n    }, {\n      key: \"open\",\n      value: function open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n          this.readyState = \"opening\";\n          this.doOpen();\n        }\n\n        return this;\n      }\n      /**\n       * Closes the transport.\n       *\n       * @api public\n       */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n          this.doClose();\n          this.onClose();\n        }\n\n        return this;\n      }\n      /**\n       * Sends multiple packets.\n       *\n       * @param {Array} packets\n       * @api public\n       */\n\n    }, {\n      key: \"send\",\n      value: function send(packets) {\n        if (\"open\" === this.readyState) {\n          this.write(packets);\n        }\n      }\n      /**\n       * Called upon open\n       *\n       * @api protected\n       */\n\n    }, {\n      key: \"onOpen\",\n      value: function onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n\n        _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"open\");\n      }\n      /**\n       * Called with data.\n       *\n       * @param {String} data\n       * @api protected\n       */\n\n    }, {\n      key: \"onData\",\n      value: function onData(data) {\n        var packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n      }\n      /**\n       * Called with a decoded packet.\n       *\n       * @api protected\n       */\n\n    }, {\n      key: \"onPacket\",\n      value: function onPacket(packet) {\n        _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"packet\", packet);\n      }\n      /**\n       * Called upon close.\n       *\n       * @api protected\n       */\n\n    }, {\n      key: \"onClose\",\n      value: function onClose() {\n        this.readyState = \"closed\";\n\n        _get(_getPrototypeOf(Transport.prototype), \"emit\", this).call(this, \"close\");\n      }\n    }]);\n\n    return Transport;\n  }(Emitter_1);\n\n  var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n      length = 64,\n      map = {},\n      seed = 0,\n      i = 0,\n      prev;\n  /**\n   * Return a string representing the specified number.\n   *\n   * @param {Number} num The number to convert.\n   * @returns {String} The string representation of the number.\n   * @api public\n   */\n\n  function encode(num) {\n    var encoded = '';\n\n    do {\n      encoded = alphabet[num % length] + encoded;\n      num = Math.floor(num / length);\n    } while (num > 0);\n\n    return encoded;\n  }\n  /**\n   * Return the integer value specified by the given string.\n   *\n   * @param {String} str The string to convert.\n   * @returns {Number} The integer value represented by the string.\n   * @api public\n   */\n\n\n  function decode(str) {\n    var decoded = 0;\n\n    for (i = 0; i < str.length; i++) {\n      decoded = decoded * length + map[str.charAt(i)];\n    }\n\n    return decoded;\n  }\n  /**\n   * Yeast: A tiny growing id generator.\n   *\n   * @returns {String} A unique id.\n   * @api public\n   */\n\n\n  function yeast() {\n    var now = encode(+new Date());\n    if (now !== prev) return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n  } //\n  // Map each character to its index.\n  //\n\n\n  for (; i < length; i++) {\n    map[alphabet[i]] = i;\n  } //\n  // Expose the `yeast`, `encode` and `decode` functions.\n  //\n\n\n  yeast.encode = encode;\n  yeast.decode = decode;\n  var yeast_1 = yeast;\n  var parseqs = {};\n  /**\n   * Compiles a querystring\n   * Returns string representation of the object\n   *\n   * @param {Object}\n   * @api private\n   */\n\n  parseqs.encode = function (obj) {\n    var str = '';\n\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        if (str.length) str += '&';\n        str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Parses a simple querystring into an object\n   *\n   * @param {String} qs\n   * @api private\n   */\n\n\n  parseqs.decode = function (qs) {\n    var qry = {};\n    var pairs = qs.split('&');\n\n    for (var i = 0, l = pairs.length; i < l; i++) {\n      var pair = pairs[i].split('=');\n      qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n\n    return qry;\n  };\n\n  var Polling = /*#__PURE__*/function (_Transport) {\n    _inherits(Polling, _Transport);\n\n    var _super = _createSuper(Polling);\n\n    function Polling() {\n      var _this;\n\n      _classCallCheck(this, Polling);\n\n      _this = _super.apply(this, arguments);\n      _this.polling = false;\n      return _this;\n    }\n    /**\n     * Transport name.\n     */\n\n\n    _createClass(Polling, [{\n      key: \"name\",\n      get: function get() {\n        return \"polling\";\n      }\n      /**\n       * Opens the socket (triggers polling). We write a PING message to determine\n       * when the transport is open.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"doOpen\",\n      value: function doOpen() {\n        this.poll();\n      }\n      /**\n       * Pauses polling.\n       *\n       * @param {Function} callback upon buffers are flushed and transport is paused\n       * @api private\n       */\n\n    }, {\n      key: \"pause\",\n      value: function pause(onPause) {\n        var _this2 = this;\n\n        this.readyState = \"pausing\";\n\n        var pause = function pause() {\n          _this2.readyState = \"paused\";\n          onPause();\n        };\n\n        if (this.polling || !this.writable) {\n          var total = 0;\n\n          if (this.polling) {\n            total++;\n            this.once(\"pollComplete\", function () {\n              --total || pause();\n            });\n          }\n\n          if (!this.writable) {\n            total++;\n            this.once(\"drain\", function () {\n              --total || pause();\n            });\n          }\n        } else {\n          pause();\n        }\n      }\n      /**\n       * Starts polling cycle.\n       *\n       * @api public\n       */\n\n    }, {\n      key: \"poll\",\n      value: function poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n      }\n      /**\n       * Overloads onData to detect payloads.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onData\",\n      value: function onData(data) {\n        var _this3 = this;\n\n        var callback = function callback(packet) {\n          // if its the first message we consider the transport open\n          if (\"opening\" === _this3.readyState && packet.type === \"open\") {\n            _this3.onOpen();\n          } // if its a close packet, we close the ongoing requests\n\n\n          if (\"close\" === packet.type) {\n            _this3.onClose();\n\n            return false;\n          } // otherwise bypass onData and handle the message\n\n\n          _this3.onPacket(packet);\n        }; // decode payload\n\n\n        decodePayload(data, this.socket.binaryType).forEach(callback); // if an event did not trigger closing\n\n        if (\"closed\" !== this.readyState) {\n          // if we got data we're not polling\n          this.polling = false;\n          this.emit(\"pollComplete\");\n\n          if (\"open\" === this.readyState) {\n            this.poll();\n          }\n        }\n      }\n      /**\n       * For polling, send a close packet.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"doClose\",\n      value: function doClose() {\n        var _this4 = this;\n\n        var close = function close() {\n          _this4.write([{\n            type: \"close\"\n          }]);\n        };\n\n        if (\"open\" === this.readyState) {\n          close();\n        } else {\n          // in case we're trying to close while\n          // handshaking is in progress (GH-164)\n          this.once(\"open\", close);\n        }\n      }\n      /**\n       * Writes a packets payload.\n       *\n       * @param {Array} data packets\n       * @param {Function} drain callback\n       * @api private\n       */\n\n    }, {\n      key: \"write\",\n      value: function write(packets) {\n        var _this5 = this;\n\n        this.writable = false;\n        encodePayload(packets, function (data) {\n          _this5.doWrite(data, function () {\n            _this5.writable = true;\n\n            _this5.emit(\"drain\");\n          });\n        });\n      }\n      /**\n       * Generates uri for connection.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"uri\",\n      value: function uri() {\n        var query = this.query || {};\n        var schema = this.opts.secure ? \"https\" : \"http\";\n        var port = \"\"; // cache busting is forced\n\n        if (false !== this.opts.timestampRequests) {\n          query[this.opts.timestampParam] = yeast_1();\n        }\n\n        if (!this.supportsBinary && !query.sid) {\n          query.b64 = 1;\n        } // avoid port if default for schema\n\n\n        if (this.opts.port && (\"https\" === schema && Number(this.opts.port) !== 443 || \"http\" === schema && Number(this.opts.port) !== 80)) {\n          port = \":\" + this.opts.port;\n        }\n\n        var encodedQuery = parseqs.encode(query);\n        var ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n      }\n    }]);\n\n    return Polling;\n  }(Transport);\n  /**\n   * Empty function\n   */\n\n\n  function empty() {}\n\n  var hasXHR2 = function () {\n    var xhr = new XMLHttpRequest$1({\n      xdomain: false\n    });\n    return null != xhr.responseType;\n  }();\n\n  var XHR = /*#__PURE__*/function (_Polling) {\n    _inherits(XHR, _Polling);\n\n    var _super = _createSuper(XHR);\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n\n\n    function XHR(opts) {\n      var _this;\n\n      _classCallCheck(this, XHR);\n\n      _this = _super.call(this, opts);\n\n      if (typeof location !== \"undefined\") {\n        var isSSL = \"https:\" === location.protocol;\n        var port = location.port; // some user agents have empty `location.port`\n\n        if (!port) {\n          port = isSSL ? \"443\" : \"80\";\n        }\n\n        _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n        _this.xs = opts.secure !== isSSL;\n      }\n      /**\n       * XHR supports binary\n       */\n\n\n      var forceBase64 = opts && opts.forceBase64;\n      _this.supportsBinary = hasXHR2 && !forceBase64;\n      return _this;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n\n\n    _createClass(XHR, [{\n      key: \"request\",\n      value: function request() {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _extends(opts, {\n          xd: this.xd,\n          xs: this.xs\n        }, this.opts);\n\n        return new Request(this.uri(), opts);\n      }\n      /**\n       * Sends data.\n       *\n       * @param {String} data to send.\n       * @param {Function} called upon flush.\n       * @api private\n       */\n\n    }, {\n      key: \"doWrite\",\n      value: function doWrite(data, fn) {\n        var _this2 = this;\n\n        var req = this.request({\n          method: \"POST\",\n          data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", function (err) {\n          _this2.onError(\"xhr post error\", err);\n        });\n      }\n      /**\n       * Starts a poll cycle.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"doPoll\",\n      value: function doPoll() {\n        var _this3 = this;\n\n        var req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", function (err) {\n          _this3.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n      }\n    }]);\n\n    return XHR;\n  }(Polling);\n\n  var Request = /*#__PURE__*/function (_Emitter) {\n    _inherits(Request, _Emitter);\n\n    var _super2 = _createSuper(Request);\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n\n\n    function Request(uri, opts) {\n      var _this4;\n\n      _classCallCheck(this, Request);\n\n      _this4 = _super2.call(this);\n      installTimerFunctions(_assertThisInitialized(_this4), opts);\n      _this4.opts = opts;\n      _this4.method = opts.method || \"GET\";\n      _this4.uri = uri;\n      _this4.async = false !== opts.async;\n      _this4.data = undefined !== opts.data ? opts.data : null;\n\n      _this4.create();\n\n      return _this4;\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n\n\n    _createClass(Request, [{\n      key: \"create\",\n      value: function create() {\n        var _this5 = this;\n\n        var opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        var xhr = this.xhr = new XMLHttpRequest$1(opts);\n\n        try {\n          xhr.open(this.method, this.uri, this.async);\n\n          try {\n            if (this.opts.extraHeaders) {\n              xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n              for (var i in this.opts.extraHeaders) {\n                if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                  xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                }\n              }\n            }\n          } catch (e) {}\n\n          if (\"POST\" === this.method) {\n            try {\n              xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n            } catch (e) {}\n          }\n\n          try {\n            xhr.setRequestHeader(\"Accept\", \"*/*\");\n          } catch (e) {} // ie6 check\n\n\n          if (\"withCredentials\" in xhr) {\n            xhr.withCredentials = this.opts.withCredentials;\n          }\n\n          if (this.opts.requestTimeout) {\n            xhr.timeout = this.opts.requestTimeout;\n          }\n\n          xhr.onreadystatechange = function () {\n            if (4 !== xhr.readyState) return;\n\n            if (200 === xhr.status || 1223 === xhr.status) {\n              _this5.onLoad();\n            } else {\n              // make sure the `error` event handler that's user-set\n              // does not throw in the same tick and gets caught here\n              _this5.setTimeoutFn(function () {\n                _this5.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n              }, 0);\n            }\n          };\n\n          xhr.send(this.data);\n        } catch (e) {\n          // Need to defer since .create() is called directly from the constructor\n          // and thus the 'error' event can only be only bound *after* this exception\n          // occurs.  Therefore, also, we cannot throw here at all.\n          this.setTimeoutFn(function () {\n            _this5.onError(e);\n          }, 0);\n          return;\n        }\n\n        if (typeof document !== \"undefined\") {\n          this.index = Request.requestsCount++;\n          Request.requests[this.index] = this;\n        }\n      }\n      /**\n       * Called upon successful response.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onSuccess\",\n      value: function onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n      }\n      /**\n       * Called if we have data.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onData\",\n      value: function onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n      }\n      /**\n       * Called upon error.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onError\",\n      value: function onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n      }\n      /**\n       * Cleans up house.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"cleanup\",\n      value: function cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n          return;\n        }\n\n        this.xhr.onreadystatechange = empty;\n\n        if (fromError) {\n          try {\n            this.xhr.abort();\n          } catch (e) {}\n        }\n\n        if (typeof document !== \"undefined\") {\n          delete Request.requests[this.index];\n        }\n\n        this.xhr = null;\n      }\n      /**\n       * Called upon load.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onLoad\",\n      value: function onLoad() {\n        var data = this.xhr.responseText;\n\n        if (data !== null) {\n          this.onData(data);\n        }\n      }\n      /**\n       * Aborts the request.\n       *\n       * @api public\n       */\n\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        this.cleanup();\n      }\n    }]);\n\n    return Request;\n  }(Emitter_1);\n\n  Request.requestsCount = 0;\n  Request.requests = {};\n  /**\n   * Aborts pending requests when unloading the window. This is needed to prevent\n   * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n   * emitted.\n   */\n\n  if (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n      // @ts-ignore\n      attachEvent(\"onunload\", unloadHandler);\n    } else if (typeof addEventListener === \"function\") {\n      var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n      addEventListener(terminationEvent, unloadHandler, false);\n    }\n  }\n\n  function unloadHandler() {\n    for (var i in Request.requests) {\n      if (Request.requests.hasOwnProperty(i)) {\n        Request.requests[i].abort();\n      }\n    }\n  }\n\n  var nextTick = function () {\n    var isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n\n    if (isPromiseAvailable) {\n      return function (cb) {\n        return Promise.resolve().then(cb);\n      };\n    } else {\n      return function (cb, setTimeoutFn) {\n        return setTimeoutFn(cb, 0);\n      };\n    }\n  }();\n\n  var WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\n  var usingBrowserWebSocket = true;\n  var defaultBinaryType = \"arraybuffer\";\n  var isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\n\n  var WS = /*#__PURE__*/function (_Transport) {\n    _inherits(WS, _Transport);\n\n    var _super = _createSuper(WS);\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n\n\n    function WS(opts) {\n      var _this;\n\n      _classCallCheck(this, WS);\n\n      _this = _super.call(this, opts);\n      _this.supportsBinary = !opts.forceBase64;\n      return _this;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n\n\n    _createClass(WS, [{\n      key: \"name\",\n      get: function get() {\n        return \"websocket\";\n      }\n      /**\n       * Opens socket.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"doOpen\",\n      value: function doOpen() {\n        if (!this.check()) {\n          // let probe timeout\n          return;\n        }\n\n        var uri = this.uri();\n        var protocols = this.opts.protocols; // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n\n        var opts = isReactNative ? {} : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n\n        if (this.opts.extraHeaders) {\n          opts.headers = this.opts.extraHeaders;\n        }\n\n        try {\n          this.ws = usingBrowserWebSocket && !isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n        } catch (err) {\n          return this.emit(\"error\", err);\n        }\n\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n      }\n      /**\n       * Adds event listeners to the socket\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        var _this2 = this;\n\n        this.ws.onopen = function () {\n          if (_this2.opts.autoUnref) {\n            _this2.ws._socket.unref();\n          }\n\n          _this2.onOpen();\n        };\n\n        this.ws.onclose = this.onClose.bind(this);\n\n        this.ws.onmessage = function (ev) {\n          return _this2.onData(ev.data);\n        };\n\n        this.ws.onerror = function (e) {\n          return _this2.onError(\"websocket error\", e);\n        };\n      }\n      /**\n       * Writes data to socket.\n       *\n       * @param {Array} array of packets.\n       * @api private\n       */\n\n    }, {\n      key: \"write\",\n      value: function write(packets) {\n        var _this3 = this;\n\n        this.writable = false; // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n\n        var _loop = function _loop(i) {\n          var packet = packets[i];\n          var lastPacket = i === packets.length - 1;\n          encodePacket(packet, _this3.supportsBinary, function (data) {\n            // always create a new object (GH-437)\n            var opts = {}; // have a chance of informing us about it yet, in that case send will\n            // throw an error\n\n            try {\n              if (usingBrowserWebSocket) {\n                // TypeError is thrown when passing the second argument on Safari\n                _this3.ws.send(data);\n              }\n            } catch (e) {}\n\n            if (lastPacket) {\n              // fake drain\n              // defer to next tick to allow Socket to clear writeBuffer\n              nextTick(function () {\n                _this3.writable = true;\n\n                _this3.emit(\"drain\");\n              }, _this3.setTimeoutFn);\n            }\n          });\n        };\n\n        for (var i = 0; i < packets.length; i++) {\n          _loop(i);\n        }\n      }\n      /**\n       * Closes socket.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"doClose\",\n      value: function doClose() {\n        if (typeof this.ws !== \"undefined\") {\n          this.ws.close();\n          this.ws = null;\n        }\n      }\n      /**\n       * Generates uri for connection.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"uri\",\n      value: function uri() {\n        var query = this.query || {};\n        var schema = this.opts.secure ? \"wss\" : \"ws\";\n        var port = \"\"; // avoid port if default for schema\n\n        if (this.opts.port && (\"wss\" === schema && Number(this.opts.port) !== 443 || \"ws\" === schema && Number(this.opts.port) !== 80)) {\n          port = \":\" + this.opts.port;\n        } // append timestamp to URI\n\n\n        if (this.opts.timestampRequests) {\n          query[this.opts.timestampParam] = yeast_1();\n        } // communicate binary support capabilities\n\n\n        if (!this.supportsBinary) {\n          query.b64 = 1;\n        }\n\n        var encodedQuery = parseqs.encode(query);\n        var ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n      }\n      /**\n       * Feature detection for WebSocket.\n       *\n       * @return {Boolean} whether this transport is available.\n       * @api public\n       */\n\n    }, {\n      key: \"check\",\n      value: function check() {\n        return !!WebSocket && !(\"__initialize\" in WebSocket && this.name === WS.prototype.name);\n      }\n    }]);\n\n    return WS;\n  }(Transport);\n\n  var transports = {\n    websocket: WS,\n    polling: XHR\n  };\n\n  var Socket$1 = /*#__PURE__*/function (_Emitter) {\n    _inherits(Socket, _Emitter);\n\n    var _super = _createSuper(Socket);\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n\n\n    function Socket(uri) {\n      var _this;\n\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Socket);\n\n      _this = _super.call(this);\n\n      if (uri && \"object\" === _typeof(uri)) {\n        opts = uri;\n        uri = null;\n      }\n\n      if (uri) {\n        uri = parseuri(uri);\n        opts.hostname = uri.host;\n        opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n        opts.port = uri.port;\n        if (uri.query) opts.query = uri.query;\n      } else if (opts.host) {\n        opts.hostname = parseuri(opts.host).host;\n      }\n\n      installTimerFunctions(_assertThisInitialized(_this), opts);\n      _this.secure = null != opts.secure ? opts.secure : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n      if (opts.hostname && !opts.port) {\n        // if no port is specified manually, use the protocol default\n        opts.port = _this.secure ? \"443\" : \"80\";\n      }\n\n      _this.hostname = opts.hostname || (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n      _this.port = opts.port || (typeof location !== \"undefined\" && location.port ? location.port : _this.secure ? \"443\" : \"80\");\n      _this.transports = opts.transports || [\"polling\", \"websocket\"];\n      _this.readyState = \"\";\n      _this.writeBuffer = [];\n      _this.prevBufferLen = 0;\n      _this.opts = _extends({\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      }, opts);\n      _this.opts.path = _this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n      if (typeof _this.opts.query === \"string\") {\n        _this.opts.query = parseqs.decode(_this.opts.query);\n      } // set on handshake\n\n\n      _this.id = null;\n      _this.upgrades = null;\n      _this.pingInterval = null;\n      _this.pingTimeout = null; // set on heartbeat\n\n      _this.pingTimeoutTimer = null;\n\n      if (typeof addEventListener === \"function\") {\n        if (_this.opts.closeOnBeforeunload) {\n          // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n          // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n          // closed/reloaded)\n          addEventListener(\"beforeunload\", function () {\n            if (_this.transport) {\n              // silently close the transport\n              _this.transport.removeAllListeners();\n\n              _this.transport.close();\n            }\n          }, false);\n        }\n\n        if (_this.hostname !== \"localhost\") {\n          _this.offlineEventListener = function () {\n            _this.onClose(\"transport close\");\n          };\n\n          addEventListener(\"offline\", _this.offlineEventListener, false);\n        }\n      }\n\n      _this.open();\n\n      return _this;\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n\n\n    _createClass(Socket, [{\n      key: \"createTransport\",\n      value: function createTransport(name) {\n        var query = clone(this.opts.query); // append engine.io protocol identifier\n\n        query.EIO = protocol$1; // transport name\n\n        query.transport = name; // session id if we already have one\n\n        if (this.id) query.sid = this.id;\n\n        var opts = _extends({}, this.opts.transportOptions[name], this.opts, {\n          query: query,\n          socket: this,\n          hostname: this.hostname,\n          secure: this.secure,\n          port: this.port\n        });\n\n        return new transports[name](opts);\n      }\n      /**\n       * Initializes transport to use and starts probe.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"open\",\n      value: function open() {\n        var _this2 = this;\n\n        var transport;\n\n        if (this.opts.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf(\"websocket\") !== -1) {\n          transport = \"websocket\";\n        } else if (0 === this.transports.length) {\n          // Emit error on next tick so it can be listened to\n          this.setTimeoutFn(function () {\n            _this2.emitReserved(\"error\", \"No transports available\");\n          }, 0);\n          return;\n        } else {\n          transport = this.transports[0];\n        }\n\n        this.readyState = \"opening\"; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n        try {\n          transport = this.createTransport(transport);\n        } catch (e) {\n          this.transports.shift();\n          this.open();\n          return;\n        }\n\n        transport.open();\n        this.setTransport(transport);\n      }\n      /**\n       * Sets the current transport. Disables the existing one (if any).\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"setTransport\",\n      value: function setTransport(transport) {\n        var _this3 = this;\n\n        if (this.transport) {\n          this.transport.removeAllListeners();\n        } // set up transport\n\n\n        this.transport = transport; // set up transport listeners\n\n        transport.on(\"drain\", this.onDrain.bind(this)).on(\"packet\", this.onPacket.bind(this)).on(\"error\", this.onError.bind(this)).on(\"close\", function () {\n          _this3.onClose(\"transport close\");\n        });\n      }\n      /**\n       * Probes a transport.\n       *\n       * @param {String} transport name\n       * @api private\n       */\n\n    }, {\n      key: \"probe\",\n      value: function probe(name) {\n        var _this4 = this;\n\n        var transport = this.createTransport(name);\n        var failed = false;\n        Socket.priorWebsocketSuccess = false;\n\n        var onTransportOpen = function onTransportOpen() {\n          if (failed) return;\n          transport.send([{\n            type: \"ping\",\n            data: \"probe\"\n          }]);\n          transport.once(\"packet\", function (msg) {\n            if (failed) return;\n\n            if (\"pong\" === msg.type && \"probe\" === msg.data) {\n              _this4.upgrading = true;\n\n              _this4.emitReserved(\"upgrading\", transport);\n\n              if (!transport) return;\n              Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n              _this4.transport.pause(function () {\n                if (failed) return;\n                if (\"closed\" === _this4.readyState) return;\n                cleanup();\n\n                _this4.setTransport(transport);\n\n                transport.send([{\n                  type: \"upgrade\"\n                }]);\n\n                _this4.emitReserved(\"upgrade\", transport);\n\n                transport = null;\n                _this4.upgrading = false;\n\n                _this4.flush();\n              });\n            } else {\n              var err = new Error(\"probe error\"); // @ts-ignore\n\n              err.transport = transport.name;\n\n              _this4.emitReserved(\"upgradeError\", err);\n            }\n          });\n        };\n\n        function freezeTransport() {\n          if (failed) return; // Any callback called by transport should be ignored since now\n\n          failed = true;\n          cleanup();\n          transport.close();\n          transport = null;\n        } // Handle any error that happens while probing\n\n\n        var onerror = function onerror(err) {\n          var error = new Error(\"probe error: \" + err); // @ts-ignore\n\n          error.transport = transport.name;\n          freezeTransport();\n\n          _this4.emitReserved(\"upgradeError\", error);\n        };\n\n        function onTransportClose() {\n          onerror(\"transport closed\");\n        } // When the socket is closed while we're probing\n\n\n        function onclose() {\n          onerror(\"socket closed\");\n        } // When the socket is upgraded while we're probing\n\n\n        function onupgrade(to) {\n          if (transport && to.name !== transport.name) {\n            freezeTransport();\n          }\n        } // Remove all listeners on the transport and on self\n\n\n        var cleanup = function cleanup() {\n          transport.removeListener(\"open\", onTransportOpen);\n          transport.removeListener(\"error\", onerror);\n          transport.removeListener(\"close\", onTransportClose);\n\n          _this4.off(\"close\", onclose);\n\n          _this4.off(\"upgrading\", onupgrade);\n        };\n\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n      }\n      /**\n       * Called when connection is deemed open.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onOpen\",\n      value: function onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush(); // we check for `readyState` in case an `open`\n        // listener already closed the socket\n\n        if (\"open\" === this.readyState && this.opts.upgrade && this.transport.pause) {\n          var i = 0;\n          var l = this.upgrades.length;\n\n          for (; i < l; i++) {\n            this.probe(this.upgrades[i]);\n          }\n        }\n      }\n      /**\n       * Handles a packet.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onPacket\",\n      value: function onPacket(packet) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n          this.emitReserved(\"packet\", packet); // Socket is live - any packet counts\n\n          this.emitReserved(\"heartbeat\");\n\n          switch (packet.type) {\n            case \"open\":\n              this.onHandshake(JSON.parse(packet.data));\n              break;\n\n            case \"ping\":\n              this.resetPingTimeout();\n              this.sendPacket(\"pong\");\n              this.emitReserved(\"ping\");\n              this.emitReserved(\"pong\");\n              break;\n\n            case \"error\":\n              var err = new Error(\"server error\"); // @ts-ignore\n\n              err.code = packet.data;\n              this.onError(err);\n              break;\n\n            case \"message\":\n              this.emitReserved(\"data\", packet.data);\n              this.emitReserved(\"message\", packet.data);\n              break;\n          }\n        }\n      }\n      /**\n       * Called upon handshake completion.\n       *\n       * @param {Object} data - handshake obj\n       * @api private\n       */\n\n    }, {\n      key: \"onHandshake\",\n      value: function onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen(); // In case open handler closes socket\n\n        if (\"closed\" === this.readyState) return;\n        this.resetPingTimeout();\n      }\n      /**\n       * Sets and resets ping timeout timer based on server pings.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"resetPingTimeout\",\n      value: function resetPingTimeout() {\n        var _this5 = this;\n\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(function () {\n          _this5.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n\n        if (this.opts.autoUnref) {\n          this.pingTimeoutTimer.unref();\n        }\n      }\n      /**\n       * Called on `drain` event\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onDrain\",\n      value: function onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n\n        this.prevBufferLen = 0;\n\n        if (0 === this.writeBuffer.length) {\n          this.emitReserved(\"drain\");\n        } else {\n          this.flush();\n        }\n      }\n      /**\n       * Flush write buffers.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"flush\",\n      value: function flush() {\n        if (\"closed\" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n          this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n          // splice writeBuffer and callbackBuffer on `drain`\n\n          this.prevBufferLen = this.writeBuffer.length;\n          this.emitReserved(\"flush\");\n        }\n      }\n      /**\n       * Sends a message.\n       *\n       * @param {String} message.\n       * @param {Function} callback function.\n       * @param {Object} options.\n       * @return {Socket} for chaining.\n       * @api public\n       */\n\n    }, {\n      key: \"write\",\n      value: function write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n      }\n    }, {\n      key: \"send\",\n      value: function send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n      }\n      /**\n       * Sends a packet.\n       *\n       * @param {String} packet type.\n       * @param {String} data.\n       * @param {Object} options.\n       * @param {Function} callback function.\n       * @api private\n       */\n\n    }, {\n      key: \"sendPacket\",\n      value: function sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n          fn = data;\n          data = undefined;\n        }\n\n        if (\"function\" === typeof options) {\n          fn = options;\n          options = null;\n        }\n\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n          return;\n        }\n\n        options = options || {};\n        options.compress = false !== options.compress;\n        var packet = {\n          type: type,\n          data: data,\n          options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn) this.once(\"flush\", fn);\n        this.flush();\n      }\n      /**\n       * Closes the connection.\n       *\n       * @api public\n       */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this6 = this;\n\n        var close = function close() {\n          _this6.onClose(\"forced close\");\n\n          _this6.transport.close();\n        };\n\n        var cleanupAndClose = function cleanupAndClose() {\n          _this6.off(\"upgrade\", cleanupAndClose);\n\n          _this6.off(\"upgradeError\", cleanupAndClose);\n\n          close();\n        };\n\n        var waitForUpgrade = function waitForUpgrade() {\n          // wait for upgrade to finish since we can't send packets while pausing a transport\n          _this6.once(\"upgrade\", cleanupAndClose);\n\n          _this6.once(\"upgradeError\", cleanupAndClose);\n        };\n\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n          this.readyState = \"closing\";\n\n          if (this.writeBuffer.length) {\n            this.once(\"drain\", function () {\n              if (_this6.upgrading) {\n                waitForUpgrade();\n              } else {\n                close();\n              }\n            });\n          } else if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        }\n\n        return this;\n      }\n      /**\n       * Called upon transport error\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onError\",\n      value: function onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n      }\n      /**\n       * Called upon transport close.\n       *\n       * @api private\n       */\n\n    }, {\n      key: \"onClose\",\n      value: function onClose(reason, desc) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n          // clear timers\n          this.clearTimeoutFn(this.pingTimeoutTimer); // stop event from firing again for transport\n\n          this.transport.removeAllListeners(\"close\"); // ensure transport won't stay open\n\n          this.transport.close(); // ignore further transport communication\n\n          this.transport.removeAllListeners();\n\n          if (typeof removeEventListener === \"function\") {\n            removeEventListener(\"offline\", this.offlineEventListener, false);\n          } // set ready state\n\n\n          this.readyState = \"closed\"; // clear session id\n\n          this.id = null; // emit close event\n\n          this.emitReserved(\"close\", reason, desc); // clean buffers after, so users can still\n          // grab the buffers on `close` event\n\n          this.writeBuffer = [];\n          this.prevBufferLen = 0;\n        }\n      }\n      /**\n       * Filters upgrades, returning only those matching client transports.\n       *\n       * @param {Array} server upgrades\n       * @api private\n       *\n       */\n\n    }, {\n      key: \"filterUpgrades\",\n      value: function filterUpgrades(upgrades) {\n        var filteredUpgrades = [];\n        var i = 0;\n        var j = upgrades.length;\n\n        for (; i < j; i++) {\n          if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);\n        }\n\n        return filteredUpgrades;\n      }\n    }]);\n\n    return Socket;\n  }(Emitter_1);\n\n  Socket$1.protocol = protocol$1;\n\n  function clone(obj) {\n    var o = {};\n\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        o[i] = obj[i];\n      }\n    }\n\n    return o;\n  }\n\n  var withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n  var isView = function isView(obj) {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n  };\n\n  var toString = Object.prototype.toString;\n  var withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && toString.call(Blob) === \"[object BlobConstructor]\";\n  var withNativeFile = typeof File === \"function\" || typeof File !== \"undefined\" && toString.call(File) === \"[object FileConstructor]\";\n  /**\n   * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n   *\n   * @private\n   */\n\n  function isBinary(obj) {\n    return withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File;\n  }\n\n  function hasBinary(obj, toJSON) {\n    if (!obj || _typeof(obj) !== \"object\") {\n      return false;\n    }\n\n    if (Array.isArray(obj)) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (hasBinary(obj[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    if (isBinary(obj)) {\n      return true;\n    }\n\n    if (obj.toJSON && typeof obj.toJSON === \"function\" && arguments.length === 1) {\n      return hasBinary(obj.toJSON(), true);\n    }\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n   *\n   * @param {Object} packet - socket.io event packet\n   * @return {Object} with deconstructed packet and list of buffers\n   * @public\n   */\n\n\n  function deconstructPacket(packet) {\n    var buffers = [];\n    var packetData = packet.data;\n    var pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n\n    return {\n      packet: pack,\n      buffers: buffers\n    };\n  }\n\n  function _deconstructPacket(data, buffers) {\n    if (!data) return data;\n\n    if (isBinary(data)) {\n      var placeholder = {\n        _placeholder: true,\n        num: buffers.length\n      };\n      buffers.push(data);\n      return placeholder;\n    } else if (Array.isArray(data)) {\n      var newData = new Array(data.length);\n\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i], buffers);\n      }\n\n      return newData;\n    } else if (_typeof(data) === \"object\" && !(data instanceof Date)) {\n      var _newData = {};\n\n      for (var key in data) {\n        if (data.hasOwnProperty(key)) {\n          _newData[key] = _deconstructPacket(data[key], buffers);\n        }\n      }\n\n      return _newData;\n    }\n\n    return data;\n  }\n  /**\n   * Reconstructs a binary packet from its placeholder packet and buffers\n   *\n   * @param {Object} packet - event packet with placeholders\n   * @param {Array} buffers - binary buffers to put in placeholder positions\n   * @return {Object} reconstructed packet\n   * @public\n   */\n\n\n  function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n\n    return packet;\n  }\n\n  function _reconstructPacket(data, buffers) {\n    if (!data) return data;\n\n    if (data && data._placeholder) {\n      return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    } else if (Array.isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i], buffers);\n      }\n    } else if (_typeof(data) === \"object\") {\n      for (var key in data) {\n        if (data.hasOwnProperty(key)) {\n          data[key] = _reconstructPacket(data[key], buffers);\n        }\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Protocol version.\n   *\n   * @public\n   */\n\n\n  var protocol = 5;\n  var PacketType;\n\n  (function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n  })(PacketType || (PacketType = {}));\n  /**\n   * A socket.io Encoder instance\n   */\n\n\n  var Encoder = /*#__PURE__*/function () {\n    function Encoder() {\n      _classCallCheck(this, Encoder);\n    }\n\n    _createClass(Encoder, [{\n      key: \"encode\",\n      value:\n      /**\n       * Encode a packet as a single string if non-binary, or as a\n       * buffer sequence, depending on packet type.\n       *\n       * @param {Object} obj - packet object\n       */\n      function encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n          if (hasBinary(obj)) {\n            obj.type = obj.type === PacketType.EVENT ? PacketType.BINARY_EVENT : PacketType.BINARY_ACK;\n            return this.encodeAsBinary(obj);\n          }\n        }\n\n        return [this.encodeAsString(obj)];\n      }\n      /**\n       * Encode packet as string.\n       */\n\n    }, {\n      key: \"encodeAsString\",\n      value: function encodeAsString(obj) {\n        // first is type\n        var str = \"\" + obj.type; // attachments if we have them\n\n        if (obj.type === PacketType.BINARY_EVENT || obj.type === PacketType.BINARY_ACK) {\n          str += obj.attachments + \"-\";\n        } // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n\n\n        if (obj.nsp && \"/\" !== obj.nsp) {\n          str += obj.nsp + \",\";\n        } // immediately followed by the id\n\n\n        if (null != obj.id) {\n          str += obj.id;\n        } // json data\n\n\n        if (null != obj.data) {\n          str += JSON.stringify(obj.data);\n        }\n\n        return str;\n      }\n      /**\n       * Encode packet as 'buffer sequence' by removing blobs, and\n       * deconstructing packet into object with placeholders and\n       * a list of buffers.\n       */\n\n    }, {\n      key: \"encodeAsBinary\",\n      value: function encodeAsBinary(obj) {\n        var deconstruction = deconstructPacket(obj);\n        var pack = this.encodeAsString(deconstruction.packet);\n        var buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n\n        return buffers; // write all the buffers\n      }\n    }]);\n\n    return Encoder;\n  }();\n  /**\n   * A socket.io Decoder instance\n   *\n   * @return {Object} decoder\n   */\n\n\n  var Decoder = /*#__PURE__*/function (_Emitter) {\n    _inherits(Decoder, _Emitter);\n\n    var _super = _createSuper(Decoder);\n\n    function Decoder() {\n      _classCallCheck(this, Decoder);\n\n      return _super.call(this);\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n\n\n    _createClass(Decoder, [{\n      key: \"add\",\n      value: function add(obj) {\n        var packet;\n\n        if (typeof obj === \"string\") {\n          packet = this.decodeString(obj);\n\n          if (packet.type === PacketType.BINARY_EVENT || packet.type === PacketType.BINARY_ACK) {\n            // binary packet's json\n            this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n            if (packet.attachments === 0) {\n              _get(_getPrototypeOf(Decoder.prototype), \"emitReserved\", this).call(this, \"decoded\", packet);\n            }\n          } else {\n            // non-binary full packet\n            _get(_getPrototypeOf(Decoder.prototype), \"emitReserved\", this).call(this, \"decoded\", packet);\n          }\n        } else if (isBinary(obj) || obj.base64) {\n          // raw binary data\n          if (!this.reconstructor) {\n            throw new Error(\"got binary data when not reconstructing a packet\");\n          } else {\n            packet = this.reconstructor.takeBinaryData(obj);\n\n            if (packet) {\n              // received final buffer\n              this.reconstructor = null;\n\n              _get(_getPrototypeOf(Decoder.prototype), \"emitReserved\", this).call(this, \"decoded\", packet);\n            }\n          }\n        } else {\n          throw new Error(\"Unknown type: \" + obj);\n        }\n      }\n      /**\n       * Decode a packet String (JSON data)\n       *\n       * @param {String} str\n       * @return {Object} packet\n       */\n\n    }, {\n      key: \"decodeString\",\n      value: function decodeString(str) {\n        var i = 0; // look up type\n\n        var p = {\n          type: Number(str.charAt(0))\n        };\n\n        if (PacketType[p.type] === undefined) {\n          throw new Error(\"unknown packet type \" + p.type);\n        } // look up attachments if type binary\n\n\n        if (p.type === PacketType.BINARY_EVENT || p.type === PacketType.BINARY_ACK) {\n          var start = i + 1;\n\n          while (str.charAt(++i) !== \"-\" && i != str.length) {}\n\n          var buf = str.substring(start, i);\n\n          if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n            throw new Error(\"Illegal attachments\");\n          }\n\n          p.attachments = Number(buf);\n        } // look up namespace (if any)\n\n\n        if (\"/\" === str.charAt(i + 1)) {\n          var _start = i + 1;\n\n          while (++i) {\n            var c = str.charAt(i);\n            if (\",\" === c) break;\n            if (i === str.length) break;\n          }\n\n          p.nsp = str.substring(_start, i);\n        } else {\n          p.nsp = \"/\";\n        } // look up id\n\n\n        var next = str.charAt(i + 1);\n\n        if (\"\" !== next && Number(next) == next) {\n          var _start2 = i + 1;\n\n          while (++i) {\n            var _c = str.charAt(i);\n\n            if (null == _c || Number(_c) != _c) {\n              --i;\n              break;\n            }\n\n            if (i === str.length) break;\n          }\n\n          p.id = Number(str.substring(_start2, i + 1));\n        } // look up json data\n\n\n        if (str.charAt(++i)) {\n          var payload = tryParse(str.substr(i));\n\n          if (Decoder.isPayloadValid(p.type, payload)) {\n            p.data = payload;\n          } else {\n            throw new Error(\"invalid payload\");\n          }\n        }\n\n        return p;\n      }\n    }, {\n      key: \"destroy\",\n      value:\n      /**\n       * Deallocates a parser's resources\n       */\n      function destroy() {\n        if (this.reconstructor) {\n          this.reconstructor.finishedReconstruction();\n        }\n      }\n    }], [{\n      key: \"isPayloadValid\",\n      value: function isPayloadValid(type, payload) {\n        switch (type) {\n          case PacketType.CONNECT:\n            return _typeof(payload) === \"object\";\n\n          case PacketType.DISCONNECT:\n            return payload === undefined;\n\n          case PacketType.CONNECT_ERROR:\n            return typeof payload === \"string\" || _typeof(payload) === \"object\";\n\n          case PacketType.EVENT:\n          case PacketType.BINARY_EVENT:\n            return Array.isArray(payload) && payload.length > 0;\n\n          case PacketType.ACK:\n          case PacketType.BINARY_ACK:\n            return Array.isArray(payload);\n        }\n      }\n    }]);\n\n    return Decoder;\n  }(Emitter_1);\n\n  function tryParse(str) {\n    try {\n      return JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * A manager of a binary event's 'buffer sequence'. Should\n   * be constructed whenever a packet of type BINARY_EVENT is\n   * decoded.\n   *\n   * @param {Object} packet\n   * @return {BinaryReconstructor} initialized reconstructor\n   */\n\n\n  var BinaryReconstructor = /*#__PURE__*/function () {\n    function BinaryReconstructor(packet) {\n      _classCallCheck(this, BinaryReconstructor);\n\n      this.packet = packet;\n      this.buffers = [];\n      this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n\n\n    _createClass(BinaryReconstructor, [{\n      key: \"takeBinaryData\",\n      value: function takeBinaryData(binData) {\n        this.buffers.push(binData);\n\n        if (this.buffers.length === this.reconPack.attachments) {\n          // done with buffer list\n          var packet = reconstructPacket(this.reconPack, this.buffers);\n          this.finishedReconstruction();\n          return packet;\n        }\n\n        return null;\n      }\n      /**\n       * Cleans up binary packet reconstruction variables.\n       */\n\n    }, {\n      key: \"finishedReconstruction\",\n      value: function finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n      }\n    }]);\n\n    return BinaryReconstructor;\n  }();\n\n  var parser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    protocol: protocol,\n\n    get PacketType() {\n      return PacketType;\n    },\n\n    Encoder: Encoder,\n    Decoder: Decoder\n  });\n\n  function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n      obj.off(ev, fn);\n    };\n  }\n  /**\n   * Internal events.\n   * These events can't be emitted by the user.\n   */\n\n\n  var RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1\n  });\n\n  var Socket = /*#__PURE__*/function (_Emitter) {\n    _inherits(Socket, _Emitter);\n\n    var _super = _createSuper(Socket);\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n\n\n    function Socket(io, nsp, opts) {\n      var _this;\n\n      _classCallCheck(this, Socket);\n\n      _this = _super.call(this);\n      _this.connected = false;\n      _this.disconnected = true;\n      _this.receiveBuffer = [];\n      _this.sendBuffer = [];\n      _this.ids = 0;\n      _this.acks = {};\n      _this.flags = {};\n      _this.io = io;\n      _this.nsp = nsp;\n\n      if (opts && opts.auth) {\n        _this.auth = opts.auth;\n      }\n\n      if (_this.io._autoConnect) _this.open();\n      return _this;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n\n\n    _createClass(Socket, [{\n      key: \"subEvents\",\n      value: function subEvents() {\n        if (this.subs) return;\n        var io = this.io;\n        this.subs = [on(io, \"open\", this.onopen.bind(this)), on(io, \"packet\", this.onpacket.bind(this)), on(io, \"error\", this.onerror.bind(this)), on(io, \"close\", this.onclose.bind(this))];\n      }\n      /**\n       * Whether the Socket will try to reconnect when its Manager connects or reconnects\n       */\n\n    }, {\n      key: \"active\",\n      get: function get() {\n        return !!this.subs;\n      }\n      /**\n       * \"Opens\" the socket.\n       *\n       * @public\n       */\n\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        if (this.connected) return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"]) this.io.open(); // ensure open\n\n        if (\"open\" === this.io._readyState) this.onopen();\n        return this;\n      }\n      /**\n       * Alias for connect()\n       */\n\n    }, {\n      key: \"open\",\n      value: function open() {\n        return this.connect();\n      }\n      /**\n       * Sends a `message` event.\n       *\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"send\",\n      value: function send() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n      }\n      /**\n       * Override `emit`.\n       * If the event is in `events`, it's emitted normally.\n       *\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"emit\",\n      value: function emit(ev) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n          throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        args.unshift(ev);\n        var packet = {\n          type: PacketType.EVENT,\n          data: args\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false; // event ack callback\n\n        if (\"function\" === typeof args[args.length - 1]) {\n          this.acks[this.ids] = args.pop();\n          packet.id = this.ids++;\n        }\n\n        var isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable;\n        var discardPacket = this.flags[\"volatile\"] && (!isTransportWritable || !this.connected);\n        if (discardPacket) ;else if (this.connected) {\n          this.packet(packet);\n        } else {\n          this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n      }\n      /**\n       * Sends a packet.\n       *\n       * @param packet\n       * @private\n       */\n\n    }, {\n      key: \"packet\",\n      value: function packet(_packet) {\n        _packet.nsp = this.nsp;\n\n        this.io._packet(_packet);\n      }\n      /**\n       * Called upon engine `open`.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onopen\",\n      value: function onopen() {\n        var _this2 = this;\n\n        if (typeof this.auth == \"function\") {\n          this.auth(function (data) {\n            _this2.packet({\n              type: PacketType.CONNECT,\n              data: data\n            });\n          });\n        } else {\n          this.packet({\n            type: PacketType.CONNECT,\n            data: this.auth\n          });\n        }\n      }\n      /**\n       * Called upon engine or manager `error`.\n       *\n       * @param err\n       * @private\n       */\n\n    }, {\n      key: \"onerror\",\n      value: function onerror(err) {\n        if (!this.connected) {\n          this.emitReserved(\"connect_error\", err);\n        }\n      }\n      /**\n       * Called upon engine `close`.\n       *\n       * @param reason\n       * @private\n       */\n\n    }, {\n      key: \"onclose\",\n      value: function onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n      }\n      /**\n       * Called with socket packet.\n       *\n       * @param packet\n       * @private\n       */\n\n    }, {\n      key: \"onpacket\",\n      value: function onpacket(packet) {\n        var sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace) return;\n\n        switch (packet.type) {\n          case PacketType.CONNECT:\n            if (packet.data && packet.data.sid) {\n              var id = packet.data.sid;\n              this.onconnect(id);\n            } else {\n              this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n            }\n\n            break;\n\n          case PacketType.EVENT:\n            this.onevent(packet);\n            break;\n\n          case PacketType.BINARY_EVENT:\n            this.onevent(packet);\n            break;\n\n          case PacketType.ACK:\n            this.onack(packet);\n            break;\n\n          case PacketType.BINARY_ACK:\n            this.onack(packet);\n            break;\n\n          case PacketType.DISCONNECT:\n            this.ondisconnect();\n            break;\n\n          case PacketType.CONNECT_ERROR:\n            var err = new Error(packet.data.message); // @ts-ignore\n\n            err.data = packet.data.data;\n            this.emitReserved(\"connect_error\", err);\n            break;\n        }\n      }\n      /**\n       * Called upon a server event.\n       *\n       * @param packet\n       * @private\n       */\n\n    }, {\n      key: \"onevent\",\n      value: function onevent(packet) {\n        var args = packet.data || [];\n\n        if (null != packet.id) {\n          args.push(this.ack(packet.id));\n        }\n\n        if (this.connected) {\n          this.emitEvent(args);\n        } else {\n          this.receiveBuffer.push(Object.freeze(args));\n        }\n      }\n    }, {\n      key: \"emitEvent\",\n      value: function emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n          var listeners = this._anyListeners.slice();\n\n          var _iterator = _createForOfIteratorHelper(listeners),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var listener = _step.value;\n              listener.apply(this, args);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        _get(_getPrototypeOf(Socket.prototype), \"emit\", this).apply(this, args);\n      }\n      /**\n       * Produces an ack callback to emit with an event.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"ack\",\n      value: function ack(id) {\n        var self = this;\n        var sent = false;\n        return function () {\n          // prevent double callbacks\n          if (sent) return;\n          sent = true;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          self.packet({\n            type: PacketType.ACK,\n            id: id,\n            data: args\n          });\n        };\n      }\n      /**\n       * Called upon a server acknowlegement.\n       *\n       * @param packet\n       * @private\n       */\n\n    }, {\n      key: \"onack\",\n      value: function onack(packet) {\n        var ack = this.acks[packet.id];\n\n        if (\"function\" === typeof ack) {\n          ack.apply(this, packet.data);\n          delete this.acks[packet.id];\n        }\n      }\n      /**\n       * Called upon server connect.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onconnect\",\n      value: function onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n      }\n      /**\n       * Emit buffered events (received and emitted).\n       *\n       * @private\n       */\n\n    }, {\n      key: \"emitBuffered\",\n      value: function emitBuffered() {\n        var _this3 = this;\n\n        this.receiveBuffer.forEach(function (args) {\n          return _this3.emitEvent(args);\n        });\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach(function (packet) {\n          return _this3.packet(packet);\n        });\n        this.sendBuffer = [];\n      }\n      /**\n       * Called upon server disconnect.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"ondisconnect\",\n      value: function ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n      }\n      /**\n       * Called upon forced client/server side disconnections,\n       * this method ensures the manager stops tracking us and\n       * that reconnections don't get triggered for this.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        if (this.subs) {\n          // clean subscriptions to avoid reconnections\n          this.subs.forEach(function (subDestroy) {\n            return subDestroy();\n          });\n          this.subs = undefined;\n        }\n\n        this.io[\"_destroy\"](this);\n      }\n      /**\n       * Disconnects the socket manually.\n       *\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"disconnect\",\n      value: function disconnect() {\n        if (this.connected) {\n          this.packet({\n            type: PacketType.DISCONNECT\n          });\n        } // remove socket from pool\n\n\n        this.destroy();\n\n        if (this.connected) {\n          // fire events\n          this.onclose(\"io client disconnect\");\n        }\n\n        return this;\n      }\n      /**\n       * Alias for disconnect()\n       *\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        return this.disconnect();\n      }\n      /**\n       * Sets the compress flag.\n       *\n       * @param compress - if `true`, compresses the sending data\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"compress\",\n      value: function compress(_compress) {\n        this.flags.compress = _compress;\n        return this;\n      }\n      /**\n       * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n       * ready to send messages.\n       *\n       * @returns self\n       * @public\n       */\n\n    }, {\n      key: \"volatile\",\n      get: function get() {\n        this.flags[\"volatile\"] = true;\n        return this;\n      }\n      /**\n       * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n       * callback.\n       *\n       * @param listener\n       * @public\n       */\n\n    }, {\n      key: \"onAny\",\n      value: function onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n\n        this._anyListeners.push(listener);\n\n        return this;\n      }\n      /**\n       * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n       * callback. The listener is added to the beginning of the listeners array.\n       *\n       * @param listener\n       * @public\n       */\n\n    }, {\n      key: \"prependAny\",\n      value: function prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n\n        this._anyListeners.unshift(listener);\n\n        return this;\n      }\n      /**\n       * Removes the listener that will be fired when any event is emitted.\n       *\n       * @param listener\n       * @public\n       */\n\n    }, {\n      key: \"offAny\",\n      value: function offAny(listener) {\n        if (!this._anyListeners) {\n          return this;\n        }\n\n        if (listener) {\n          var listeners = this._anyListeners;\n\n          for (var i = 0; i < listeners.length; i++) {\n            if (listener === listeners[i]) {\n              listeners.splice(i, 1);\n              return this;\n            }\n          }\n        } else {\n          this._anyListeners = [];\n        }\n\n        return this;\n      }\n      /**\n       * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n       * e.g. to remove listeners.\n       *\n       * @public\n       */\n\n    }, {\n      key: \"listenersAny\",\n      value: function listenersAny() {\n        return this._anyListeners || [];\n      }\n    }]);\n\n    return Socket;\n  }(Emitter_1);\n  /**\n   * Expose `Backoff`.\n   */\n\n\n  var backo2 = Backoff;\n  /**\n   * Initialize backoff timer with `opts`.\n   *\n   * - `min` initial timeout in milliseconds [100]\n   * - `max` max timeout [10000]\n   * - `jitter` [0]\n   * - `factor` [2]\n   *\n   * @param {Object} opts\n   * @api public\n   */\n\n  function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n  }\n  /**\n   * Return the backoff duration.\n   *\n   * @return {Number}\n   * @api public\n   */\n\n\n  Backoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n    if (this.jitter) {\n      var rand = Math.random();\n      var deviation = Math.floor(rand * this.jitter * ms);\n      ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n\n    return Math.min(ms, this.max) | 0;\n  };\n  /**\n   * Reset the number of attempts.\n   *\n   * @api public\n   */\n\n\n  Backoff.prototype.reset = function () {\n    this.attempts = 0;\n  };\n  /**\n   * Set the minimum duration\n   *\n   * @api public\n   */\n\n\n  Backoff.prototype.setMin = function (min) {\n    this.ms = min;\n  };\n  /**\n   * Set the maximum duration\n   *\n   * @api public\n   */\n\n\n  Backoff.prototype.setMax = function (max) {\n    this.max = max;\n  };\n  /**\n   * Set the jitter\n   *\n   * @api public\n   */\n\n\n  Backoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n  };\n\n  var Manager = /*#__PURE__*/function (_Emitter) {\n    _inherits(Manager, _Emitter);\n\n    var _super = _createSuper(Manager);\n\n    function Manager(uri, opts) {\n      var _this;\n\n      _classCallCheck(this, Manager);\n\n      var _a;\n\n      _this = _super.call(this);\n      _this.nsps = {};\n      _this.subs = [];\n\n      if (uri && \"object\" === _typeof(uri)) {\n        opts = uri;\n        uri = undefined;\n      }\n\n      opts = opts || {};\n      opts.path = opts.path || \"/socket.io\";\n      _this.opts = opts;\n      installTimerFunctions(_assertThisInitialized(_this), opts);\n\n      _this.reconnection(opts.reconnection !== false);\n\n      _this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\n      _this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\n      _this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\n      _this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n\n      _this.backoff = new backo2({\n        min: _this.reconnectionDelay(),\n        max: _this.reconnectionDelayMax(),\n        jitter: _this.randomizationFactor()\n      });\n\n      _this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\n      _this._readyState = \"closed\";\n      _this.uri = uri;\n\n      var _parser = opts.parser || parser;\n\n      _this.encoder = new _parser.Encoder();\n      _this.decoder = new _parser.Decoder();\n      _this._autoConnect = opts.autoConnect !== false;\n      if (_this._autoConnect) _this.open();\n      return _this;\n    }\n\n    _createClass(Manager, [{\n      key: \"reconnection\",\n      value: function reconnection(v) {\n        if (!arguments.length) return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n      }\n    }, {\n      key: \"reconnectionAttempts\",\n      value: function reconnectionAttempts(v) {\n        if (v === undefined) return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n      }\n    }, {\n      key: \"reconnectionDelay\",\n      value: function reconnectionDelay(v) {\n        var _a;\n\n        if (v === undefined) return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n      }\n    }, {\n      key: \"randomizationFactor\",\n      value: function randomizationFactor(v) {\n        var _a;\n\n        if (v === undefined) return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n      }\n    }, {\n      key: \"reconnectionDelayMax\",\n      value: function reconnectionDelayMax(v) {\n        var _a;\n\n        if (v === undefined) return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n      }\n    }, {\n      key: \"timeout\",\n      value: function timeout(v) {\n        if (!arguments.length) return this._timeout;\n        this._timeout = v;\n        return this;\n      }\n      /**\n       * Starts trying to reconnect if reconnection is enabled and we have not\n       * started reconnecting yet\n       *\n       * @private\n       */\n\n    }, {\n      key: \"maybeReconnectOnOpen\",\n      value: function maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {\n          // keeps reconnection from firing twice for the same reconnection loop\n          this.reconnect();\n        }\n      }\n      /**\n       * Sets the current transport `socket`.\n       *\n       * @param {Function} fn - optional, callback\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"open\",\n      value: function open(fn) {\n        var _this2 = this;\n\n        if (~this._readyState.indexOf(\"open\")) return this;\n        this.engine = new Socket$1(this.uri, this.opts);\n        var socket = this.engine;\n        var self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false; // emit `open`\n\n        var openSubDestroy = on(socket, \"open\", function () {\n          self.onopen();\n          fn && fn();\n        }); // emit `error`\n\n        var errorSub = on(socket, \"error\", function (err) {\n          self.cleanup();\n          self._readyState = \"closed\";\n\n          _this2.emitReserved(\"error\", err);\n\n          if (fn) {\n            fn(err);\n          } else {\n            // Only do this if there is no fn to handle the error\n            self.maybeReconnectOnOpen();\n          }\n        });\n\n        if (false !== this._timeout) {\n          var timeout = this._timeout;\n\n          if (timeout === 0) {\n            openSubDestroy(); // prevents a race condition with the 'open' event\n          } // set timer\n\n\n          var timer = this.setTimeoutFn(function () {\n            openSubDestroy();\n            socket.close(); // @ts-ignore\n\n            socket.emit(\"error\", new Error(\"timeout\"));\n          }, timeout);\n\n          if (this.opts.autoUnref) {\n            timer.unref();\n          }\n\n          this.subs.push(function subDestroy() {\n            clearTimeout(timer);\n          });\n        }\n\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n      }\n      /**\n       * Alias for open()\n       *\n       * @return self\n       * @public\n       */\n\n    }, {\n      key: \"connect\",\n      value: function connect(fn) {\n        return this.open(fn);\n      }\n      /**\n       * Called upon transport open.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onopen\",\n      value: function onopen() {\n        // clear old subs\n        this.cleanup(); // mark as open\n\n        this._readyState = \"open\";\n        this.emitReserved(\"open\"); // add new subs\n\n        var socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n      }\n      /**\n       * Called upon a ping.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onping\",\n      value: function onping() {\n        this.emitReserved(\"ping\");\n      }\n      /**\n       * Called with data.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"ondata\",\n      value: function ondata(data) {\n        this.decoder.add(data);\n      }\n      /**\n       * Called when parser fully decodes a packet.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"ondecoded\",\n      value: function ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n      }\n      /**\n       * Called upon socket error.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onerror\",\n      value: function onerror(err) {\n        this.emitReserved(\"error\", err);\n      }\n      /**\n       * Creates a new socket for the given `nsp`.\n       *\n       * @return {Socket}\n       * @public\n       */\n\n    }, {\n      key: \"socket\",\n      value: function socket(nsp, opts) {\n        var socket = this.nsps[nsp];\n\n        if (!socket) {\n          socket = new Socket(this, nsp, opts);\n          this.nsps[nsp] = socket;\n        }\n\n        return socket;\n      }\n      /**\n       * Called upon a socket close.\n       *\n       * @param socket\n       * @private\n       */\n\n    }, {\n      key: \"_destroy\",\n      value: function _destroy(socket) {\n        var nsps = Object.keys(this.nsps);\n\n        for (var _i = 0, _nsps = nsps; _i < _nsps.length; _i++) {\n          var nsp = _nsps[_i];\n          var _socket = this.nsps[nsp];\n\n          if (_socket.active) {\n            return;\n          }\n        }\n\n        this._close();\n      }\n      /**\n       * Writes a packet.\n       *\n       * @param packet\n       * @private\n       */\n\n    }, {\n      key: \"_packet\",\n      value: function _packet(packet) {\n        var encodedPackets = this.encoder.encode(packet);\n\n        for (var i = 0; i < encodedPackets.length; i++) {\n          this.engine.write(encodedPackets[i], packet.options);\n        }\n      }\n      /**\n       * Clean up transport subscriptions and packet buffer.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        this.subs.forEach(function (subDestroy) {\n          return subDestroy();\n        });\n        this.subs.length = 0;\n        this.decoder.destroy();\n      }\n      /**\n       * Close the current socket.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"_close\",\n      value: function _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n\n        if (\"opening\" === this._readyState) {\n          // `onclose` will not fire because\n          // an open event never happened\n          this.cleanup();\n        }\n\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine) this.engine.close();\n      }\n      /**\n       * Alias for close()\n       *\n       * @private\n       */\n\n    }, {\n      key: \"disconnect\",\n      value: function disconnect() {\n        return this._close();\n      }\n      /**\n       * Called upon engine close.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onclose\",\n      value: function onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n\n        if (this._reconnection && !this.skipReconnect) {\n          this.reconnect();\n        }\n      }\n      /**\n       * Attempt a reconnection.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"reconnect\",\n      value: function reconnect() {\n        var _this3 = this;\n\n        if (this._reconnecting || this.skipReconnect) return this;\n        var self = this;\n\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n          this.backoff.reset();\n          this.emitReserved(\"reconnect_failed\");\n          this._reconnecting = false;\n        } else {\n          var delay = this.backoff.duration();\n          this._reconnecting = true;\n          var timer = this.setTimeoutFn(function () {\n            if (self.skipReconnect) return;\n\n            _this3.emitReserved(\"reconnect_attempt\", self.backoff.attempts); // check again for the case socket closed in above events\n\n\n            if (self.skipReconnect) return;\n            self.open(function (err) {\n              if (err) {\n                self._reconnecting = false;\n                self.reconnect();\n\n                _this3.emitReserved(\"reconnect_error\", err);\n              } else {\n                self.onreconnect();\n              }\n            });\n          }, delay);\n\n          if (this.opts.autoUnref) {\n            timer.unref();\n          }\n\n          this.subs.push(function subDestroy() {\n            clearTimeout(timer);\n          });\n        }\n      }\n      /**\n       * Called upon successful reconnect.\n       *\n       * @private\n       */\n\n    }, {\n      key: \"onreconnect\",\n      value: function onreconnect() {\n        var attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n      }\n    }]);\n\n    return Manager;\n  }(Emitter_1);\n  /**\n   * Managers cache.\n   */\n\n\n  var cache = {};\n\n  function lookup(uri, opts) {\n    if (_typeof(uri) === \"object\") {\n      opts = uri;\n      uri = undefined;\n    }\n\n    opts = opts || {};\n    var parsed = url(uri, opts.path || \"/socket.io\");\n    var source = parsed.source;\n    var id = parsed.id;\n    var path = parsed.path;\n    var sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    var newConnection = opts.forceNew || opts[\"force new connection\"] || false === opts.multiplex || sameNamespace;\n    var io;\n\n    if (newConnection) {\n      io = new Manager(source, opts);\n    } else {\n      if (!cache[id]) {\n        cache[id] = new Manager(source, opts);\n      }\n\n      io = cache[id];\n    }\n\n    if (parsed.query && !opts.query) {\n      opts.query = parsed.queryKey;\n    }\n\n    return io.socket(parsed.path, opts);\n  } // so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n  // namespace (e.g. `io.connect(...)`), for backward compatibility\n\n\n  _extends(lookup, {\n    Manager: Manager,\n    Socket: Socket,\n    io: lookup,\n    connect: lookup\n  });\n\n  return lookup;\n});","map":{"version":3,"sources":["../node_modules/parseuri/index.js","../build/esm/url.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/yeast/index.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/index.js"],"names":["re","parts","parseuri","src","b","str","e","m","uri","i","pathNames","queryKey","regx","names","path","data","query","loc","obj","ipv6","host","hasCorsModule","Function","xdomain","opts","globalThis","attr","acc","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","setTimeout","clearTimeout","mixin","Emitter","fn","on","arguments","callbacks","cb","args","len","PACKET_TYPES","Object","PACKET_TYPES_REVERSE","ERROR_PACKET","type","withNativeBlob","withNativeArrayBuffer","isView","ArrayBuffer","encodePacket","callback","encodeBlobAsBase64","fileReader","content","lookup","decode","decodePacket","mapBinary","encodedPacket","decodeBase64Packet","packetType","decoded","base64","SEPARATOR","String","encodePayload","length","packets","encodedPackets","count","decodePayload","encodedPayload","decodedPacket","protocol","Transport","installTimerFunctions","err","packet","alphabet","map","seed","encoded","num","Math","now","encode","prev","yeast","yeast_1","encodeURIComponent","qry","pairs","qs","l","pair","decodeURIComponent","Polling","pause","onPause","total","close","schema","port","Number","encodedQuery","parseqs","hasXHR2","xhr","XHR","isSSL","location","forceBase64","xd","xs","req","method","Request","undefined","pick","attachEvent","terminationEvent","addEventListener","nextTick","isPromiseAvailable","Promise","setTimeoutFn","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","WS","protocols","ev","lastPacket","transports","websocket","polling","Socket","agent","withCredentials","upgrade","timestampParam","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","clone","socket","hostname","secure","transport","failed","onTransportOpen","msg","cleanup","onerror","error","freezeTransport","to","JSON","options","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","j","upgrades","o","toString","withNativeFile","Array","hasBinary","isBinary","buffers","packetData","pack","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","PacketType","Encoder","deconstruction","deconstructPacket","Decoder","p","start","buf","c","next","payload","tryParse","BinaryReconstructor","reconstructPacket","RESERVED_EVENTS","connect","connect_error","disconnect","disconnecting","newListener","removeListener","io","isTransportWritable","discardPacket","auth","sameNamespace","id","listeners","listener","self","sent","ack","subDestroy","DISCONNECT","backo2","Backoff","ms","rand","deviation","Manager","_a","min","max","jitter","_parser","v","openSubDestroy","errorSub","timeout","timer","nsps","nsp","delay","attempt","cache","parsed","url","source","newConnection"],"mappings":"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","sourcesContent":["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"]},"metadata":{},"sourceType":"script"}