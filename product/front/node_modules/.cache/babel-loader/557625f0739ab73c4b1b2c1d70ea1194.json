{"ast":null,"code":"var _jsxFileName = \"/Users/tekyteka/Documents/tkiener-blablapp-react/product/front/src/CreateContact.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport './CreateConversation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateConversation extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   username: ''\n    // }\n\n    this.createConversation = this.createConversation.bind(this);\n  }\n\n  createConversation(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('email', this.emails.value);\n    data.append('name', this.name.value);\n    fetch('http://localhost:5000/create_conversation', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      let created_conv = data;\n      console.log(created_conv);\n      console.log(typeof created_conv);\n\n      if (created_conv.includes('conversation_id')) {\n        this.props.history.push('/conversation-list');\n      } else {\n        alert('Echec de la création de la conversation');\n      } // window.location.reload(false);\n\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.createConversation,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-style\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              children: \"Emails des participants: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"emails\",\n              class: \"input\",\n              type: \"text\",\n              ref: ref => {\n                this.emails = ref;\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"emails-syntaxe-requirement\",\n              children: \"Si plusieurs adresses, les s\\xE9parer par des virgule espace: julien@blabla.fr, laura@blabla.fr, ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-style\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              children: \"Nom de la conversation: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: ref => {\n                this.name = ref;\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Cr\\xE9er conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(CreateConversation);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tekyteka/Documents/tkiener-blablapp-react/product/front/src/CreateContact.jsx"],"names":["React","withRouter","Header","CreateConversation","Component","constructor","props","createConversation","bind","ev","preventDefault","data","FormData","append","emails","value","name","fetch","method","body","then","response","text","created_conv","console","log","includes","history","push","alert","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Header from './Header';\nimport './CreateConversation.css'\n\nclass CreateConversation extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   username: ''\n    // }\n\n    this.createConversation = this.createConversation.bind(this);\n  }\n\n\n  createConversation(ev) {\n    ev.preventDefault();\n  \n    const data = new FormData();\n    data.append('email', this.emails.value);\n    data.append('name', this.name.value);\n\n    fetch('http://localhost:5000/create_conversation', {\n    method: 'POST',\n    body: data,\n  })\n  .then((response) => {\n    return response.text();\n  })\n  .then((data) => {\n    let created_conv = data\n    console.log(created_conv)\n    console.log(typeof created_conv)\n    if (created_conv.includes('conversation_id')) {\n      this.props.history.push('/conversation-list')\n    }\n    else {\n      alert('Echec de la création de la conversation')\n    }\n    // window.location.reload(false);\n  });\n  }\n\n\n\n  render() {\n    \n      return (\n      <> \n      <Header />\n        <form onSubmit={this.createConversation}>\n          <div className=\"flex\">\n              <div className=\"input-style\">\n                <label for=\"\">Emails des participants: </label>\n                <input id=\"emails\" class=\"input\" type=\"text\" ref={(ref) => { this.emails = ref; }} required />\n                <div id=\"emails-syntaxe-requirement\">Si plusieurs adresses, les séparer par des virgule espace: julien@blabla.fr, laura@blabla.fr, ...</div>\n              </div>\n              <div className=\"input-style\">\n                <label for=\"\">Nom de la conversation: </label>\n                <input type=\"text\" ref={(ref) => { this.name = ref; }} required></input>\n              </div>\n          </div>\n          <div>\n          <button>Créer conversation</button>\n          </div>\n        </form>\n      </>\n      );\n  }\n}\n\nexport default withRouter(CreateConversation);"]},"metadata":{},"sourceType":"module"}