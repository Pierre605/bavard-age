{"ast":null,"code":"var _jsxFileName = \"/Users/tekyteka/Documents/tkiener-blablapp-react/product/front/src/CreateContact.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport './CreateContact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contactEMAIL: ''\n    };\n    this.createContact = this.createContact.bind(this);\n  }\n\n  createContact(ev) {\n    ev.preventDefault();\n    let data = new FormData();\n    let newContactEMAIL = [...this.state.contactEMAIL];\n    newContactEMAIL = this.email.value;\n    this.setState({\n      imageEMAIL: newContactEMAIL\n    });\n    data.append('email', newContactEMAIL);\n    fetch('http://localhost:5000/create_contact', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      let created_contact = data['contact_created']['result'];\n      console.log(created_contact);\n      console.log(typeof created_contact);\n\n      if (created_contact.includes('true')) {\n        this.props.history.push('/conversation-list');\n      } else {\n        alert('Echec de la création du contact');\n      } // window.location.reload(false);\n\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.createContact,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-style\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"\",\n              children: \"Email du contact: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              class: \"input\",\n              type: \"text\",\n              ref: ref => {\n                this.email = ref;\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Cr\\xE9er contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(CreateContact);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tekyteka/Documents/tkiener-blablapp-react/product/front/src/CreateContact.jsx"],"names":["React","withRouter","Header","CreateContact","Component","constructor","props","state","contactEMAIL","createContact","bind","ev","preventDefault","data","FormData","newContactEMAIL","email","value","setState","imageEMAIL","append","fetch","method","body","then","response","json","created_contact","console","log","includes","history","push","alert","render","ref"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,qBAAP;;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAGDD,EAAAA,aAAa,CAACE,EAAD,EAAK;AAChBA,IAAAA,EAAE,CAACC,cAAH;AAEA,QAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AAEA,QAAIC,eAAe,GAAG,CAAE,GAAG,KAAKR,KAAL,CAAWC,YAAhB,CAAtB;AACAO,IAAAA,eAAe,GAAG,KAAKC,KAAL,CAAWC,KAA7B;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,UAAU,EAAEJ;AAAb,KAAd;AAEAF,IAAAA,IAAI,CAACO,MAAL,CAAY,OAAZ,EAAqBL,eAArB;AAEAM,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEV;AAFwC,KAAzC,CAAL,CAIDW,IAJC,CAIKC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KANC,EAODF,IAPC,CAOKX,IAAD,IAAU;AACd,UAAIc,eAAe,GAAGd,IAAI,CAAC,iBAAD,CAAJ,CAAwB,QAAxB,CAAtB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,eAAnB;;AACA,UAAIA,eAAe,CAACG,QAAhB,CAAyB,MAAzB,CAAJ,EAAsC;AACpC,aAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,oBAAxB;AACD,OAFD,MAGK;AACHC,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACD,OATa,CAUd;;AACD,KAlBC;AAmBD;;AAIDC,EAAAA,MAAM,GAAG;AAEL,wBACA;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKzB,aAArB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAO,cAAA,GAAG,EAAC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,EAAE,EAAC,OAAV;AAAkB,cAAA,KAAK,EAAC,OAAxB;AAAgC,cAAA,IAAI,EAAC,MAArC;AAA4C,cAAA,GAAG,EAAG0B,GAAD,IAAS;AAAE,qBAAKnB,KAAL,GAAamB,GAAb;AAAmB,eAA/E;AAAiF,cAAA,QAAQ;AAAzF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADA;AAgBH;;AA/DyC;;AAkE5C,oBAAelC,UAAU,CAACE,aAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Header from './Header';\nimport './CreateContact.css'\n\nclass CreateContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contactEMAIL: ''\n    }\n\n    this.createContact = this.createContact.bind(this);\n  }\n\n\n  createContact(ev) {\n    ev.preventDefault();\n  \n    let data = new FormData();\n\n    let newContactEMAIL = [ ...this.state.contactEMAIL]\n    newContactEMAIL = this.email.value\n    this.setState({imageEMAIL: newContactEMAIL})\n\n    data.append('email', newContactEMAIL);\n\n    fetch('http://localhost:5000/create_contact', {\n    method: 'POST',\n    body: data,\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((data) => {\n    let created_contact = data['contact_created']['result']\n    console.log(created_contact)\n    console.log(typeof created_contact)\n    if (created_contact.includes('true')) {\n      this.props.history.push('/conversation-list')\n    }\n    else {\n      alert('Echec de la création du contact')\n    }\n    // window.location.reload(false);\n  });\n  }\n\n\n\n  render() {\n    \n      return (\n      <> \n      <Header />\n        <form onSubmit={this.createContact}>\n          <div className=\"flex\">\n            <div className=\"input-style\">\n              <label for=\"\">Email du contact: </label>\n              <input id=\"email\" class=\"input\" type=\"text\" ref={(ref) => { this.email = ref; }} required />\n            </div>\n          </div>\n          <div>\n            <button>Créer contact</button>\n          </div>\n        </form>\n      </>\n      );\n  }\n}\n\nexport default withRouter(CreateContact);"]},"metadata":{},"sourceType":"module"}