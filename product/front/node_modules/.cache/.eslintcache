[{"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/index.jsx":"1","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/reportWebVitals.js":"2","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/App.jsx":"3","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/HomePage.jsx":"4","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserHome.jsx":"5","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Logout.jsx":"6","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/InConversation.jsx":"7","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Chat.jsx":"8","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Modal.jsx":"9","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Login.jsx":"10","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ConversationsByRows.jsx":"11","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserContext.jsx":"12","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/MessagesDisplay.jsx":"13","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Register.jsx":"14","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Header.jsx":"15","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/CreateConversation.jsx":"16","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ParticipantsDisplay.jsx":"17","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/CreateContact.jsx":"18","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ContactsDisplay.jsx":"19","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ContactsSelect.jsx":"20"},{"size":268,"mtime":1635152696801,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1635152696801,"results":"23","hashOfConfig":"22"},{"size":1340,"mtime":1635515227290,"results":"24","hashOfConfig":"22"},{"size":485,"mtime":1635152696801,"results":"25","hashOfConfig":"22"},{"size":3925,"mtime":1635518290182,"results":"26","hashOfConfig":"22"},{"size":794,"mtime":1635515227302,"results":"27","hashOfConfig":"22"},{"size":2095,"mtime":1635515227302,"results":"28","hashOfConfig":"22"},{"size":5148,"mtime":1635515227290,"results":"29","hashOfConfig":"22"},{"size":1476,"mtime":1635152696801,"results":"30","hashOfConfig":"22"},{"size":1409,"mtime":1635515227302,"results":"31","hashOfConfig":"22"},{"size":885,"mtime":1635515227294,"results":"32","hashOfConfig":"22"},{"size":118,"mtime":1635152696801,"results":"33","hashOfConfig":"22"},{"size":894,"mtime":1635515227302,"results":"34","hashOfConfig":"22"},{"size":2758,"mtime":1635515227302,"results":"35","hashOfConfig":"22"},{"size":414,"mtime":1635165625638,"results":"36","hashOfConfig":"22"},{"size":4623,"mtime":1635595964776,"results":"37","hashOfConfig":"22"},{"size":343,"mtime":1635515227302,"results":"38","hashOfConfig":"22"},{"size":1654,"mtime":1635515227298,"results":"39","hashOfConfig":"22"},{"size":332,"mtime":1635518448831,"results":"40","hashOfConfig":"22"},{"size":1064,"mtime":1635592209356,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"g7gtex",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/index.jsx",["91"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  )\n",["92","93"],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/reportWebVitals.js",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/App.jsx",["94","95","96","97","98","99","100","101","102","103","104"],"import React from 'react'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { \n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport reportWebVitals from './reportWebVitals';\n// Composants enfants\nimport HomePage from './HomePage.jsx';\nimport UserHome from './UserHome.jsx'\nimport Logout from './Logout';\nimport InConversation from './InConversation'\nimport Chat from './Chat'\nimport CreateConversation from './CreateConversation';\nimport CreateContact from './CreateContact';\n\n\n// Composant de classe App, principal de l'App React BLAblaPp\nclass App extends React.Component {\n\n  // Rendu React du composant avec un Router et un switch\n  render() {\n\n    return (\n      <Router>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/conversation-list\" exact>\n          <UserHome />\n        </Route>\n        <Route path=\"/create-conversation\" exact>\n            <CreateConversation />\n        </Route>\n        <Route path=\"/create-contact\" exact>\n            <CreateContact />\n        </Route>        \n        <Route path=\"/conversation/:id\" exact component={ InConversation }/> \n      </Router>      \n    );\n  }              \n}\n\nexport default App;\n","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/HomePage.jsx",["105"],"import './HomePage.css';\nimport reactDom from 'react-dom';\nimport * as React from 'react';\n// Composants enfants\nimport SimpleModal from './Modal';\nimport Login from './Login';\n\n\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversations: [],\n    }\n  }\n\n\n// Rendu React du composant \nrender() {\n\nreturn (\n    <>\n    <section>\n      <Login />\n      <SimpleModal />\n    </section>\n    </>\n  );\n}\n}\n\nexport default HomePage;\n","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserHome.jsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import './UserHome.css';\n\nimport reactDom from 'react-dom';\nimport {\n  Link\n} from \"react-router-dom\";\n// import * as React from 'react';\nimport React, { useState } from 'react'\nimport { \n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ConversationsByRows from './ConversationsByRows';\nimport Header from './Header'\nimport ContactsDisplay from './ContactsDisplay';\n\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props);\n    // Etat du composant\n    this.state = {\n      // liste des conversations de l'utilisateur connecté\n      conversations: [],\n      // liste des contacts de l'utilisateur connecté\n      contacts: [],\n    }\n  }\n\n  componentDidMount() {\n    this.getConversations()\n    this.createConvMouseOver()\n    this.createContactMouseOver()\n  }\n\n  getConversations = () => {\n    fetch('http://localhost:5000/conversation-list')\n    .then(response => {\n      return(\n        response.json()\n    )})\n    .then(convers_list => {\n      console.log('UserHome/getConversations/convers_list', convers_list)\n      // Sauvegarde de l'état du composant avec le résultat de la réponse parsée de la DB\n      this.setState({\n        conversations : convers_list.conversations,\n        contacts : convers_list.contacts\n      });\n          }, (error) => {\n            this.setState({\n              error\n            });\n          }\n      )\n  };\n  \n  createContactMouseOver() {\n    let createContactIcon = document.getElementById(\"create-contact\");\n    createContactIcon.addEventListener(\"mouseover\", function( event ) {\n      // on met l'accent sur la cible de mouseover\n      let div = document.getElementById(\"create-contact-msg\").textContent = \"Créer un contact\"\n\n      createContactIcon.addEventListener(\"mouseleave\", function(e) {\n        let div = document.getElementById(\"create-contact-msg\").textContent = \"\"\n      })\n    }, false);\n  }\n\n  createConvMouseOver() {\n    let createIcon = document.getElementById(\"create-conv\");\n    createIcon.addEventListener(\"mouseover\", function( event ) {\n      // on met l'accent sur la cible de mouseover\n      let div = document.getElementById(\"create-mssg\").textContent = \"Créer une conversation\"\n\n      createIcon.addEventListener(\"mouseleave\", function(e) {\n        let div = document.getElementById(\"create-mssg\").textContent = \"\"\n      })\n    }, false);\n  }\n\n\n\n  // Rendu React du composant\n  render() {\n\n    return (\n        <>\n        <Header />\n          <div id=\"flex-aside\">\n\n            <div className=\"side-bar\">\n              <section>\n                <div>Contacts:</div>             \n                  {this.state.contacts.map((member) => {\n                    return (\n                      <ContactsDisplay id={member.contact_id} username={member.username} email={member.email} />\n                    )\n                  })}\n                <div id=\"create-contact-container\">\n                  <a href='http://localhost:3000/create-contact'><img id=\"create-contact\" src=\"/convers-icon.png\"/></a>\n                  <div id=\"create-contact-msg\"></div>\n                </div> \n              </section>                         \n            </div>        \n          <section>\n            <div>Conversations:</div>\n              {this.state.conversations.map((conv) => {\n                return (\n                  <ConversationsByRows id={conv.id} name={conv.name} />\n                  )\n                })\n              }\n            <div id=\"create-conv-container\">\n              <a href='http://localhost:3000/create-conversation'><img id=\"create-conv\" src=\"/convers-icon.png\"/></a>\n              <div id=\"create-mssg\"></div>\n            </div>\n          </section>\n        </div>\n        </>\n      );\n    \n  }\n}\n\nexport default UserHome;\n","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Logout.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/InConversation.jsx",["123","124"],"import React from 'react'\nimport Logout from './Logout';\nimport MessagesDisplay from './MessagesDisplay';\nimport UserContext from './UserContext';\nimport Header from './Header'\nimport './InConversation.css'\nimport ParticipantsDisplay from './ParticipantsDisplay';\n\n\nclass InConversation extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = ({ messages: [],\n                     username: '',\n                     participants: [],\n                    }\n      );\n      this.handleRegister = this.handleRegister.bind(this)\n    }\n    componentDidMount() {\n      this.getConversation();\n    }\n\n    handleRegister(ev) {\n    }\n\n    getConversation = () => {\n        fetch('http://localhost:5000/conversation/' + this.props.match.params.id)\n        .then(response => {\n          return response.text()\n        })\n        .then(data => {\n          const messages = JSON.parse(data)\n          console.log(messages)\n          if (messages.includes(\"user not in this\")) {\n              alert(\"You are not part of this conversation\")\n          }\n          else {\n            this.setState({messages: messages[0],\n                           username: messages[1],\n                           participants: messages[2]})\n          }\n        })\n        }\n  \n    // Rendu React du composant  \n    render() {\n      return (\n        <>\n           <Header />\n            <div id=\"flex-aside\">\n              <div className=\"side-bar\">\n              {this.state.participants.map((member) => {\n                return (\n                  <ParticipantsDisplay name={member} user={this.state.username} />\n                )\n              })}\n              </div>\n                <div className=\"background\">\n                {this.state.messages.map((message, i) => {\n                    return (\n                            <MessagesDisplay username={this.state.username} id={i} author={message[0]} content={message[1]} sent={message[2]}/>\n                    )\n                })}\n                </div>\n            </div>\n        </>\n      );\n    }\n  }\n\nexport default InConversation","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Chat.jsx",["125","126"],"import React from 'react';\nimport './Chat.css';\nimport { Redirect } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport io from 'socket.io-client/dist/socket.io';\nconst socket = io('http://localhost:5000/chat');\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    // Etat du composant\n    this.state = ({ \n      // conversation: {'user_id' : 2, 'conversation_id' : 2},  // dico des infos de la conversation cliquée\n      messages: []  // liste des messages de la conversation cliquée\n    })\n    this.handleRegister = this.handleRegister.bind(this);\n  }\n\n// fonction qui récupère les informations de la DB des messages de la conversation cliquée (qui matche avec l'id demandé)\n  getMessages() {\n    fetch(\"http://127.0.0.1:5000/conversation/\" + this.props.match.params.id)\n      .then(response => response.json())\n      .then(\n        (result) => {\n          console.log('App/Chat/getMessages', result, result[1], result[0][1])\n          // Sauvegarde de l'état du composant avec le résultat de la réponse parsée de la DB\n          this.setState({\n            conversation : {'conversation_id' : this.props.match.params.id},\n            messages: result\n          });\n          }, (error) => {\n            this.setState({\n              error\n            });\n          }\n        )\n  };\n\n  // Le composant a été chargé\n  componentDidMount() {\n    this.getMessages(this.props.match.params.id)\n  }\n\n  // Le composant a été mis à jour\n  componentDidUpdate() {\n  }\n  \n  handleRegister(ev) {\n    // socket.on( 'connection', (client) => {  // envoie un message à la fonction FLASK  \n    //   client.on('subscribeToChat', function() {\n    //     console.log('client is subscribing to chat');\n    //     socket.emit( 'sentMessage', {\n    //       data: 'connectedUser'}  // renvoie la connexion d'un utilisateur\n    //       // var form = $( 'form' ).on( 'submit', function( e ) { // empêcher l'envoi du formulaire afin de récupérer la valeur des champs\n    //       //socket.on( 'submit', function( e ) { // empêcher l'envoi du formulaire afin de récupérer la valeur des champs\n    //         e.preventDefault()\n    //         let message = $( 'input.message' ).val()\n    //         if (message != ''){\n    //             socket.emit( 'message sent', {\n    //                 username : username,\n    //                 message : message,\n    //                 chatroom : chatroom\n    //                 } )}\n    //         $( 'input.message' ).val( '' )\n    //       })    \n    //   })\n    // }\n\n      ev.preventDefault();\n      console.log('Chat-handleRegister')\n    \n      const data = new FormData();\n      data.append('username', this.username.value);\n      data.append('message', this.message.value);\n      console.log('data', data);\n      socket.emit( 'message sent', {\n        username : data.username,\n        message : data.message,\n        chatroom : this.state.conversation\n      });\n      // $( 'input.message' ).val( '' )\n    \n    \n    // socket.on( 'my response', function( msg ) {\n    //   // envoyer un message à toutes les sessions actives\n    //   console.log( msg )\n    //   // if( typeof msg.username !== 'undefined' ) {\n    //     // $( 'h3' ).remove()\n    //     // la ligne ci-dessous est à adapter selon l'affichage de vos messages\n    //     // $( 'div.message_holder' ).append( \n    //     //   '<div class=\"message\"><b style=\"color:#000\">'+msg.username+'</b> '+msg.message+'</div>'\n    //     //   )}\n\n    //   fetch('http://localhost:5000/chat', {\n    //     method: 'POST',\n    //     body: data,\n    //   })\n    //   .then((response) => {\n    //     console.log(response.text());\n    //     {this.props.close()};\n    //     return response.text()\n    //   })\n    //   .then((data) => {\n    //     console.log(data)\n    //     if (data.includes('true')) {\n    //       this.props.history.push('/conversations')\n    //     }\n    //     else {\n    //       alert('Registration failed')\n    //     }\n    //   // window.location.reload(false);\n    // })\n  }\n\n  render() {\n    \n      return (\n      <> \n        <h1 id=\"simple-modal-title\">CHATROOM</h1>\n        <div className=\"messages\"> \n           {this.state.conversation.conversation_id}\n           {this.state.conversation.user_id}\n          <ul>  \n            {this.state.messages.map(item => (\n                <li>\n                  Message: {item[1]}\n                  Posted by: {item[0]} on: {item[2]}\n                </li>    \n                ))}             \n          </ul> \n        </div>       \n        <form onSubmit={this.handleRegister}>\n          <div className=\"box\" id={this.props.match.params.id}>\n            <label for=\"\">Votre nom: </label>\n            <input id=\"username\" class=\"input\" type=\"text\" ref={(ref) => { this.username = ref; }} required />\n            <label for=\"\">Message: </label>\n            <input ref={(ref) => { this.message = ref; }} type=\"text\"name=\"\" id=\"\" cols=\"30\" rows=\"10\" required/>\n          </div>\n          <div className=\"button\">\n          <button>Envoyer</button>\n          </div>\n        </form>\n      </>\n      );\n    }\n}\n\nexport default Chat;","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Modal.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Login.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ConversationsByRows.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserContext.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/MessagesDisplay.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Register.jsx",["127"],"import React from 'react';\n// import './Modal.css';\nimport {withRouter} from 'react-router-dom';\nimport './Register.css'\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRegister = this.handleRegister.bind(this);\n  }\n\n\n  handleRegister(ev) {\n    ev.preventDefault();\n    console.log('toto')\n  \n    const data = new FormData();\n    data.append('username', this.username.value);\n    data.append('email', this.email.value);\n    data.append('gdpr', this.rgpd.value)\n    console.log(this.rgpd.value)\n    if (this.password1.value === this.password2.value) {\n      data.append('password', this.password2.value);\n    \n\n      fetch('http://localhost:5000/register', {\n        method: 'POST',\n        body: data,\n      })\n        .then((response) => {\n          // console.log(response.text());\n          this.props.close();\n          return response.text()\n        })\n        .then((data) => {\n          console.log(data)\n          if (data.includes('true')) {\n            this.props.history.push('/conversation-list')\n          }\n          else {\n            alert('Registration failed')\n          }\n        // window.location.reload(false);\n      })\n    }\n    else {\n      document.getElementById(\"warning-password\").textContent = \"Password not confirmed\"\n    }\n  }\n\n  render() {\n    \n      return (\n      <> \n        <div id=\"img\"><img src=\"/red-cross.png\" className=\"red-cross\" onClick={this.props.close}/>\n        </div>\n        <h1 id=\"simple-modal-title\">INSCRIVEZ VOUS</h1>\n        <form onSubmit={this.handleRegister}>\n          <div className=\"box\">\n            <label for=\"\">Votre nom: </label>\n            <input id=\"username\" class=\"input\" type=\"text\" ref={(ref) => { this.username = ref; }} required />\n            <label for=\"\">Email: </label>\n            <input ref={(ref) => { this.email = ref; }} type=\"text\"name=\"\" id=\"\" cols=\"30\" rows=\"10\" required/>\n            <label for=\"\">Password: </label>\n            <input type=\"password\" ref={(ref) => { this.password1 = ref; }} required/>\n            <label for=\"\">Confirm password: </label>\n            <input type=\"password\" ref={(ref) => { this.password2 = ref; }} required/>\n          </div>\n          <div>\n            <input type=\"checkbox\" ref={(ref) => { this.rgpd = ref; }} required value=\"true\"/>\n            <label className=\"rgpd-label\" for=\"rgpd\">Cochez cette case si vous acceptez le traitement automatisé de vos données par nos services, dans le strict respect de la réglementation en vigueur (RGPD)</label>\n          </div>\n          <div id =\"warning-password\"></div>\n          <div className=\"button\">\n          <button>Envoyer</button>\n          </div>\n        </form>\n      </>\n      );\n  }\n}\n\nexport default withRouter(Register);","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/Header.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/CreateConversation.jsx",["128","129","130","131","132"],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ParticipantsDisplay.jsx",["133"],"import * as React from 'react';\nimport './ParticipantsDisplay.css'\n\n\n\nexport default function ParticipantsDisplay(props) {\n\n    if (props.name == props.user) {\n        return (\n            <div className=\"members\">Vous</div>\n        )\n    }\n\n    else {\n        return (\n            <div className=\"members\">{props.name}</div>\n        )\n    }\n}","/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/CreateContact.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ContactsDisplay.jsx",[],"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/ContactsSelect.jsx",["134"],{"ruleId":"135","severity":1,"message":"136","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":23},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"135","severity":1,"message":"143","line":5,"column":3,"nodeType":"137","messageId":"138","endLine":5,"endColumn":9},{"ruleId":"135","severity":1,"message":"144","line":7,"column":3,"nodeType":"137","messageId":"138","endLine":7,"endColumn":7},{"ruleId":"135","severity":1,"message":"145","line":10,"column":3,"nodeType":"137","messageId":"138","endLine":10,"endColumn":9},{"ruleId":"135","severity":1,"message":"146","line":11,"column":3,"nodeType":"137","messageId":"138","endLine":11,"endColumn":10},{"ruleId":"135","severity":1,"message":"147","line":12,"column":3,"nodeType":"137","messageId":"138","endLine":12,"endColumn":13},{"ruleId":"135","severity":1,"message":"148","line":13,"column":3,"nodeType":"137","messageId":"138","endLine":13,"endColumn":9},{"ruleId":"135","severity":1,"message":"149","line":14,"column":3,"nodeType":"137","messageId":"138","endLine":14,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":16,"column":8,"nodeType":"137","messageId":"138","endLine":16,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":17,"column":8,"nodeType":"137","messageId":"138","endLine":17,"endColumn":23},{"ruleId":"135","severity":1,"message":"151","line":21,"column":8,"nodeType":"137","messageId":"138","endLine":21,"endColumn":14},{"ruleId":"135","severity":1,"message":"152","line":23,"column":8,"nodeType":"137","messageId":"138","endLine":23,"endColumn":12},{"ruleId":"135","severity":1,"message":"153","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"153","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"144","line":5,"column":3,"nodeType":"137","messageId":"138","endLine":5,"endColumn":7},{"ruleId":"135","severity":1,"message":"154","line":8,"column":17,"nodeType":"137","messageId":"138","endLine":8,"endColumn":25},{"ruleId":"135","severity":1,"message":"145","line":10,"column":3,"nodeType":"137","messageId":"138","endLine":10,"endColumn":9},{"ruleId":"135","severity":1,"message":"146","line":11,"column":3,"nodeType":"137","messageId":"138","endLine":11,"endColumn":10},{"ruleId":"135","severity":1,"message":"147","line":12,"column":3,"nodeType":"137","messageId":"138","endLine":12,"endColumn":13},{"ruleId":"135","severity":1,"message":"148","line":13,"column":3,"nodeType":"137","messageId":"138","endLine":13,"endColumn":9},{"ruleId":"135","severity":1,"message":"149","line":14,"column":3,"nodeType":"137","messageId":"138","endLine":14,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":16,"column":8,"nodeType":"137","messageId":"138","endLine":16,"endColumn":16},{"ruleId":"135","severity":1,"message":"155","line":17,"column":8,"nodeType":"137","messageId":"138","endLine":17,"endColumn":18},{"ruleId":"135","severity":1,"message":"156","line":18,"column":8,"nodeType":"137","messageId":"138","endLine":18,"endColumn":17},{"ruleId":"135","severity":1,"message":"157","line":67,"column":11,"nodeType":"137","messageId":"138","endLine":67,"endColumn":14},{"ruleId":"135","severity":1,"message":"157","line":70,"column":13,"nodeType":"137","messageId":"138","endLine":70,"endColumn":16},{"ruleId":"135","severity":1,"message":"157","line":79,"column":11,"nodeType":"137","messageId":"138","endLine":79,"endColumn":14},{"ruleId":"135","severity":1,"message":"157","line":82,"column":13,"nodeType":"137","messageId":"138","endLine":82,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":106,"column":66,"nodeType":"160","endLine":106,"endColumn":116},{"ruleId":"158","severity":1,"message":"159","line":120,"column":67,"nodeType":"160","endLine":120,"endColumn":114},{"ruleId":"135","severity":1,"message":"151","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"161","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":19},{"ruleId":"135","severity":1,"message":"162","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":18},{"ruleId":"135","severity":1,"message":"163","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":56,"column":23,"nodeType":"160","endLine":56,"endColumn":99},{"ruleId":"135","severity":1,"message":"164","line":36,"column":9,"nodeType":"137","messageId":"138","endLine":36,"endColumn":10},{"ruleId":"165","severity":1,"message":"166","line":38,"column":20,"nodeType":"167","messageId":"168","endLine":38,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":54,"column":52,"nodeType":"171","messageId":"172","endLine":54,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":57,"column":57,"nodeType":"171","messageId":"172","endLine":57,"endColumn":59},{"ruleId":"158","severity":1,"message":"159","line":121,"column":66,"nodeType":"160","endLine":121,"endColumn":116},{"ruleId":"169","severity":1,"message":"170","line":8,"column":20,"nodeType":"171","messageId":"172","endLine":8,"endColumn":22},{"ruleId":"169","severity":1,"message":"170","line":18,"column":27,"nodeType":"171","messageId":"172","endLine":18,"endColumn":29},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["173"],"no-negated-in-lhs",["174"],"'Switch' is defined but never used.","'Link' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Logout' is defined but never used.","'Chat' is defined but never used.","'reactDom' is defined but never used.","'useState' is defined but never used.","'SearchIcon' is defined but never used.","'CloseIcon' is defined but never used.","'div' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserContext' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'L' is assigned a value but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]