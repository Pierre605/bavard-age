{"ast":null,"code":"var _jsxFileName = \"/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserHome.jsx\";\nimport './UserHome.css';\nimport reactDom from 'react-dom';\nimport { Link } from \"react-router-dom\"; // import * as React from 'react';\n\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ConversationsByRows from './ConversationsByRows';\nimport Header from './Header';\nimport ContactsDisplay from './ContactsDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props); // Etat du composant\n\n    this.getConversations = () => {\n      fetch('http://localhost:5000/conversation-list').then(response => {\n        return response.json();\n      }).then(convers_list => {\n        console.log('UserHome/getConversations/convers_list', convers_list); // Sauvegarde de l'état du composant avec le résultat de la réponse parsée de la DB\n\n        this.setState({\n          conversations: convers_list.conversations,\n          contacts: convers_list.contacts\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.state = {\n      // liste des conversations de l'utilisateur connecté\n      conversations: [],\n      // liste des contacts de l'utilisateur connecté\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    this.getConversations();\n    this.createConvMouseOver();\n    this.createContactMouseOver();\n  }\n\n  createContactMouseOver() {\n    let createContactIcon = document.getElementById(\"create-contact\");\n    createContactIcon.addEventListener(\"mouseover\", function (event) {\n      // on met l'accent sur la cible de mouseover\n      let div = document.getElementById(\"create-contact-msg\").textContent = \"Créer un contact\";\n      createContactIcon.addEventListener(\"mouseleave\", function (e) {\n        let div = document.getElementById(\"create-contact-msg\").textContent = \"\";\n      });\n    }, false);\n  }\n\n  createConvMouseOver() {\n    let createIcon = document.getElementById(\"create-conv\");\n    createIcon.addEventListener(\"mouseover\", function (event) {\n      // on met l'accent sur la cible de mouseover\n      let div = document.getElementById(\"create-mssg\").textContent = \"Créer une conversation\";\n      createIcon.addEventListener(\"mouseleave\", function (e) {\n        let div = document.getElementById(\"create-mssg\").textContent = \"\";\n      });\n    }, false);\n  } // Rendu React du composant\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"flex-aside\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Contacts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"create-contact-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"http://localhost:3000/create-contact\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"create-contact\",\n                  src: \"/convers-icon.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"create-contact-msg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Conversations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), this.state.conversations.map(conv => {\n            return /*#__PURE__*/_jsxDEV(ConversationsByRows, {\n              id: conv.id,\n              name: conv.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"create-conv-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/create-conversation\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"create-conv\",\n                src: \"/convers-icon.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"create-mssg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserHome;","map":{"version":3,"sources":["/home/techmanager/Documents/tkiener-blablapp-react/product/front/src/UserHome.jsx"],"names":["reactDom","Link","React","useState","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","SearchIcon","CloseIcon","ConversationsByRows","Header","ContactsDisplay","UserHome","Component","constructor","props","getConversations","fetch","then","response","json","convers_list","console","log","setState","conversations","contacts","error","state","componentDidMount","createConvMouseOver","createContactMouseOver","createContactIcon","document","getElementById","addEventListener","event","div","textContent","e","createIcon","render","map","conv","id","name"],"mappings":"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","sourcesContent":["import './UserHome.css';\n\nimport reactDom from 'react-dom';\nimport {\n  Link\n} from \"react-router-dom\";\n// import * as React from 'react';\nimport React, { useState } from 'react'\nimport { \n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ConversationsByRows from './ConversationsByRows';\nimport Header from './Header'\nimport ContactsDisplay from './ContactsDisplay';\n\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props);\n    // Etat du composant\n    this.state = {\n      // liste des conversations de l'utilisateur connecté\n      conversations: [],\n      // liste des contacts de l'utilisateur connecté\n      contacts: [],\n    }\n  }\n\n  componentDidMount() {\n    this.getConversations()\n    this.createConvMouseOver()\n    this.createContactMouseOver()\n  }\n\n  getConversations = () => {\n    fetch('http://localhost:5000/conversation-list')\n    .then(response => {\n      return(\n        response.json()\n    )})\n    .then(convers_list => {\n      console.log('UserHome/getConversations/convers_list', convers_list)\n      // Sauvegarde de l'état du composant avec le résultat de la réponse parsée de la DB\n      this.setState({\n        conversations : convers_list.conversations,\n        contacts : convers_list.contacts\n      });\n          }, (error) => {\n            this.setState({\n              error\n            });\n          }\n      )\n  };\n  \n  createContactMouseOver() {\n    let createContactIcon = document.getElementById(\"create-contact\");\n    createContactIcon.addEventListener(\"mouseover\", function( event ) {\n      // on met l'accent sur la cible de mouseover\n      let div = document.getElementById(\"create-contact-msg\").textContent = \"Créer un contact\"\n\n      createContactIcon.addEventListener(\"mouseleave\", function(e) {\n        let div = document.getElementById(\"create-contact-msg\").textContent = \"\"\n      })\n    }, false);\n  }\n\n  createConvMouseOver() {\n    let createIcon = document.getElementById(\"create-conv\");\n    createIcon.addEventListener(\"mouseover\", function( event ) {\n      // on met l'accent sur la cible de mouseover\n      let div = document.getElementById(\"create-mssg\").textContent = \"Créer une conversation\"\n\n      createIcon.addEventListener(\"mouseleave\", function(e) {\n        let div = document.getElementById(\"create-mssg\").textContent = \"\"\n      })\n    }, false);\n  }\n\n\n\n  // Rendu React du composant\n  render() {\n\n    return (\n        <>\n        <Header />\n          <div id=\"flex-aside\">\n\n            <div className=\"side-bar\">\n              <section>\n                <div>Contacts:</div>             \n                  {/* {this.state.contacts.map((member) => {\n                    return (\n                      <ContactsDisplay id={member.id} username={member.username} email={member.email} />\n                    )\n                  })} */}\n                <div id=\"create-contact-container\">\n                  <a href='http://localhost:3000/create-contact'><img id=\"create-contact\" src=\"/convers-icon.png\"/></a>\n                  <div id=\"create-contact-msg\"></div>\n                </div> \n              </section>                         \n            </div>        \n          <section>\n            <div>Conversations:</div>\n              {this.state.conversations.map((conv) => {\n                return (\n                  <ConversationsByRows id={conv.id} name={conv.name} />\n                  )\n                })\n              }\n            <div id=\"create-conv-container\">\n              <a href='http://localhost:3000/create-conversation'><img id=\"create-conv\" src=\"/convers-icon.png\"/></a>\n              <div id=\"create-mssg\"></div>\n            </div>\n          </section>\n        </div>\n        </>\n      );\n    \n  }\n}\n\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}